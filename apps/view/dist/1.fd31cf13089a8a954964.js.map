{"version":3,"sources":["webpack:///./src/state/index.ts","webpack:///C:/xampp/htdocs/PROYECTOS/tracespace/tracespace/packages/whats-that-gerber/index.js","webpack:///./src/state/context.ts","webpack:///./src/layers.ts","webpack:///./src/logger.ts","webpack:///./src/state/actions.ts","webpack:///C:/xampp/htdocs/PROYECTOS/tracespace/tracespace/packages/whats-that-gerber/lib/constants.js","webpack:///C:/xampp/htdocs/PROYECTOS/tracespace/tracespace/packages/whats-that-gerber/lib/flat-map.js","webpack:///C:/xampp/htdocs/PROYECTOS/tracespace/tracespace/packages/whats-that-gerber/lib/layer-types.js","webpack:///./src/util.ts","webpack:///./src/analytics/create-event.ts","webpack:///./src/analytics/index.ts","webpack:///C:/xampp/htdocs/PROYECTOS/tracespace/tracespace/packages/whats-that-gerber/lib/get-common-cad.js","webpack:///C:/xampp/htdocs/PROYECTOS/tracespace/tracespace/packages/whats-that-gerber/lib/get-matches.js","webpack:///C:/xampp/htdocs/PROYECTOS/tracespace/tracespace/packages/whats-that-gerber/lib/matchers.js"],"names":["constants","flatMap","getCommonCad","getMatches","layerTypes","module","exports","filenames","matches","commonCad","reduce","result","filename","match","cad","filenameMatches","filter","find","_selectMatch","type","side","validate","target","valid","some","layer","getAllLayers","map","Object","keys","forEach","constantName","INITIAL_STATE","appPreferences","board","savedBoards","mode","loading","updating","downloading","layerVisibility","error","StoreContext","React","createContext","getState","dispatch","a","useAppState","useContext","ALL_TYPES","TYPE_COPPER","TYPE_SOLDERMASK","TYPE_SILKSCREEN","TYPE_SOLDERPASTE","TYPE_DRILL","TYPE_OUTLINE","TYPE_DRAWING","ALL_SIDES","SIDE_TOP","SIDE_BOTTOM","SIDE_INNER","SIDE_ALL","COPPER_TYPES","COPPER_SIDES","VISIBLE_TYPES","VISIBLE_SIDES","MECH_TYPES","MECH_SIDES","typeToValidSides","includes","orderLayers","b","i","length","OPTIONS","getDefaultLayerOptions","allLayers","ly","converter","options","name","layerValue","initialOptions","value","Array","isArray","minLevel","LEVELS","log","debug","createLogHandler","info","warn","createLogMiddleware","store","next","action","level","window","localStorage","maybeLevel","getItem","console","readLogLevel","indexOf","msg","meta","FETCH_APP_PREFERENCES","UPDATE_APP_PREFERENCES","APP_PREFERENCES","CREATE_BOARD","CREATE_BOARD_FROM_URL","GET_BOARD","GET_BOARD_PACKAGE","UPDATE_BOARD","DELETE_BOARD","DELETE_ALL_BOARDS","SET_MODE","TOGGLE_VISIBILITY","BOARD_RENDERED","BOARD_UPDATED","BOARD_DELETED","BOARD_PACKAGED","ALL_BOARDS_DELETED","WORKER_INITIALIZED","WORKER_ERRORED","DISMISS_ERROR","fetchAppPreferences","updateAppPreferences","prefs","payload","createBoard","files","dragAndDrop","metadata","createBoardFromUrl","url","getBoard","id","updateBoard","update","deleteBoard","deleteAllBoards","getBoardPackage","setMode","toggleVisibility","solo","dismissError","_CAD_KICAD","_CAD_ALTIUM","_CAD_ALLEGRO","_CAD_EAGLE","_CAD_EAGLE_LEGACY","_CAD_EAGLE_OSHPARK","_CAD_EAGLE_PCBNG","_CAD_GEDA_PCB","_CAD_ORCAD","_CAD_DIPTRACE","collection","iterator","element","concat","c","matchers","ext","MIMETYPE_ZIP","isZip","file","endsWith","getRenderPayload","gerberOptions","drillOptions","defaultGerberOptions","layers","defaultDrillOptions","gerberUnits","units","gerberZeroSuppression","zeroSuppression","gerberCoordFormat","coordinateFormat","drillUnits","drillZeroSuppression","drillCoordFormat","useOutline","outlineGapFill","colorSoldermask","color","sm","colorSilkscreen","ss","colorCopperFinish","cf","gerberCoordinateFormat","join","drillCoordinateFormat","sourceUrlHash","sourceUrl","MD5","digest","sourceFilesHash","sourceIds","hasher","userId","getAnalyticsUserId","createAnalyticsMiddleware","prevState","nextState","nextOptIn","analyticsOptIn","event","State","source","uploadType","every","renderTime","time","trigger","request","message","createEvent","mixpanel","has_opted_out_tracking","opt_in_tracking","opt_out_tracking","track","cadCount","counts","maxAndName","count","max","extend","matcher","test","Boolean","RegExp"],"mappings":"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","file":"1.fd31cf13089a8a954964.js","sourcesContent":["// application state and actions as React context\r\nexport * from './actions'\r\nexport * from './context'\r\nexport * from './types'\r\n","'use strict'\r\n\r\nvar constants = require('./lib/constants')\r\nvar flatMap = require('./lib/flat-map')\r\nvar getCommonCad = require('./lib/get-common-cad')\r\nvar getMatches = require('./lib/get-matches')\r\nvar layerTypes = require('./lib/layer-types')\r\n\r\nmodule.exports = whatsThatGerber\r\nmodule.exports.validate = validate\r\nmodule.exports.getAllLayers = getAllLayers\r\n\r\nObject.keys(constants).forEach(function(constantName) {\r\n  module.exports[constantName] = constants[constantName]\r\n})\r\n\r\nfunction whatsThatGerber(filenames) {\r\n  if (typeof filenames === 'string') filenames = [filenames]\r\n\r\n  var matches = flatMap(filenames, getMatches)\r\n  var commonCad = getCommonCad(matches)\r\n\r\n  return filenames.reduce(function(result, filename) {\r\n    var match = _selectMatch(matches, filename, commonCad)\r\n\r\n    result[filename] = match\r\n      ? {type: match.type, side: match.side}\r\n      : {type: null, side: null}\r\n\r\n    return result\r\n  }, {})\r\n}\r\n\r\nfunction getAllLayers() {\r\n  return layerTypes\r\n    .map(function(layer) {\r\n      return {type: layer.type, side: layer.side}\r\n    })\r\n    .filter(function(layer) {\r\n      return layer.type !== null\r\n    })\r\n}\r\n\r\nfunction validate(target) {\r\n  return {\r\n    valid: layerTypes.some(_validateLayer),\r\n    side: layerTypes.some(_validateSide) ? target.side : null,\r\n    type: layerTypes.some(_validateType) ? target.type : null,\r\n  }\r\n\r\n  function _validateLayer(layer) {\r\n    return layer.side === target.side && layer.type === target.type\r\n  }\r\n\r\n  function _validateSide(layer) {\r\n    return layer.side === target.side\r\n  }\r\n\r\n  function _validateType(layer) {\r\n    return layer.type === target.type\r\n  }\r\n}\r\n\r\nfunction _selectMatch(matches, filename, cad) {\r\n  var filenameMatches = matches.filter(function(match) {\r\n    return match.filename === filename\r\n  })\r\n\r\n  var result = filenameMatches.find(function(match) {\r\n    return match.cad === cad\r\n  })\r\n\r\n  return result || filenameMatches[0] || null\r\n}\r\n","import React, {useContext} from 'react'\r\n\r\nimport {Store, State, Dispatch} from './types'\r\n\r\nexport const INITIAL_STATE: State = {\r\n  appPreferences: {},\r\n  board: null,\r\n  savedBoards: [],\r\n  mode: null,\r\n  loading: false,\r\n  updating: false,\r\n  downloading: false,\r\n  layerVisibility: {},\r\n  error: null,\r\n}\r\n\r\nexport const StoreContext = React.createContext<Store>({\r\n  getState: () => INITIAL_STATE,\r\n  dispatch: a => a,\r\n})\r\n\r\nexport const useAppState = (): State & {dispatch: Dispatch} => {\r\n  const {getState, dispatch} = useContext(StoreContext)\r\n  return {...getState(), dispatch}\r\n}\r\n","// TODO(mc, 2019-03-01): tree-shake this import somehow or bundle reduction\r\nimport {\r\n  TYPE_COPPER,\r\n  TYPE_SOLDERMASK,\r\n  TYPE_SILKSCREEN,\r\n  TYPE_SOLDERPASTE,\r\n  TYPE_DRILL,\r\n  TYPE_OUTLINE,\r\n  TYPE_DRAWING,\r\n  SIDE_TOP,\r\n  SIDE_BOTTOM,\r\n  SIDE_INNER,\r\n  SIDE_ALL,\r\n} from 'whats-that-gerber'\r\n\r\nimport {\r\n  Optional,\r\n  GerberType,\r\n  GerberSide,\r\n  LayerRender,\r\n  LayerOptions,\r\n} from './types'\r\n\r\nexport {\r\n  TYPE_COPPER,\r\n  TYPE_SOLDERMASK,\r\n  TYPE_SILKSCREEN,\r\n  TYPE_SOLDERPASTE,\r\n  TYPE_DRILL,\r\n  TYPE_OUTLINE,\r\n  TYPE_DRAWING,\r\n  SIDE_TOP,\r\n  SIDE_BOTTOM,\r\n  SIDE_INNER,\r\n  SIDE_ALL,\r\n}\r\n\r\ntype TypeList = Array<NonNullable<GerberType>>\r\ntype SideList = Array<NonNullable<GerberSide>>\r\n\r\n// all types in priority order\r\nexport const ALL_TYPES: TypeList = [\r\n  TYPE_COPPER,\r\n  TYPE_SOLDERMASK,\r\n  TYPE_SILKSCREEN,\r\n  TYPE_SOLDERPASTE,\r\n  TYPE_DRILL,\r\n  TYPE_OUTLINE,\r\n  TYPE_DRAWING,\r\n]\r\n\r\n// all side in priority order\r\nexport const ALL_SIDES: SideList = [SIDE_TOP, SIDE_BOTTOM, SIDE_INNER, SIDE_ALL]\r\n\r\n// copper sides/type in priority order\r\nexport const COPPER_TYPES: TypeList = [TYPE_COPPER]\r\nexport const COPPER_SIDES: SideList = [SIDE_TOP, SIDE_BOTTOM, SIDE_INNER]\r\n\r\n// copper sides in priority order\r\nexport const VISIBLE_TYPES: TypeList = [\r\n  TYPE_SOLDERMASK,\r\n  TYPE_SILKSCREEN,\r\n  TYPE_SOLDERPASTE,\r\n]\r\nexport const VISIBLE_SIDES: SideList = [SIDE_TOP, SIDE_BOTTOM]\r\n\r\n// mechanical sides in priority order\r\nexport const MECH_TYPES: TypeList = [TYPE_DRILL, TYPE_OUTLINE]\r\nexport const MECH_SIDES: SideList = [SIDE_ALL]\r\n\r\n// get list of valid sides based on type\r\nexport function typeToValidSides(type: unknown): SideList {\r\n  if (COPPER_TYPES.includes(type)) return COPPER_SIDES\r\n  if (VISIBLE_TYPES.includes(type)) return VISIBLE_SIDES\r\n  if (MECH_TYPES.includes(type)) return MECH_SIDES\r\n  return []\r\n}\r\n\r\n// sort by:\r\n//  - top side > bottom side > inner side > all sides > no side\r\n//  - copper > mask > silk > paste > drill > outline > drawing > no type\r\nexport function orderLayers(a: LayerRender, b: LayerRender): number {\r\n  // place no type and no side at the bottom\r\n  if ((!a.type && b.type) || (!a.side && b.side)) return 1\r\n  if ((a.type && !b.type) || (a.side && !b.side)) return -1\r\n\r\n  let i\r\n  for (i = 0; i < ALL_SIDES.length; i++) {\r\n    const side = ALL_SIDES[i]\r\n    if (a.side === side && b.side !== side) return -1\r\n    if (a.side !== side && b.side === side) return 1\r\n  }\r\n\r\n  for (i = 0; i < ALL_TYPES.length; i++) {\r\n    const type = ALL_TYPES[i]\r\n    if (a.type === type && b.type !== type) return -1\r\n    if (a.type !== type && b.type === type) return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nconst OPTIONS: Array<keyof LayerOptions> = [\r\n  'coordinateFormat',\r\n  'zeroSuppression',\r\n  'units',\r\n]\r\n\r\nexport function getDefaultLayerOptions(\r\n  allLayers: Array<LayerRender>,\r\n  type: 'gerber' | 'drill'\r\n): Optional<LayerOptions> {\r\n  const layers = allLayers.filter(\r\n    ly =>\r\n      ly.converter.layer.length !== 0 &&\r\n      ((type === 'gerber' && ly.type && ly.type !== TYPE_DRILL) ||\r\n        (type === 'drill' && ly.type === TYPE_DRILL))\r\n  )\r\n\r\n  return layers.reduce<Optional<LayerOptions>>((options, ly) => {\r\n    OPTIONS.forEach(name => {\r\n      const layerValue = ly.initialOptions[name]\r\n      let value = options[name]\r\n\r\n      if (typeof value === 'undefined') {\r\n        // set the option to the layer value if it hasn't been set yet\r\n        value = layerValue\r\n      } else if (value !== null) {\r\n        // if it has been set, check that every layer has the same value, and\r\n        // null out the option if they don't\r\n        if (Array.isArray(value)) {\r\n          if (\r\n            !Array.isArray(layerValue) ||\r\n            value[0] !== layerValue[0] ||\r\n            value[1] !== layerValue[1]\r\n          ) {\r\n            value = null\r\n          }\r\n        } else if (value !== layerValue) {\r\n          value = null\r\n        }\r\n      }\r\n\r\n      if (value !== options[name]) options = {...options, [name]: value}\r\n    })\r\n\r\n    return options\r\n  }, {})\r\n}\r\n","import {LogLevel, Logger, LogHandler} from './types'\r\nimport {Middleware} from './state'\r\n\r\nconst STORAGE_KEY = 'logLevel'\r\nconst DEFAULT_LEVEL = process.env.NODE_ENV !== 'production' ? 'debug' : 'warn'\r\nconst LEVELS: Array<LogLevel> = ['debug', 'info', 'warn', 'error']\r\n\r\nlet minLevel: LogLevel\r\n\r\nconst log: Logger = {\r\n  debug: createLogHandler('debug'),\r\n  info: createLogHandler('info'),\r\n  warn: createLogHandler('warn'),\r\n  error: createLogHandler('error'),\r\n}\r\n\r\nexport default log\r\n\r\nexport const createLogMiddleware = (): Middleware => {\r\n  return store => next => action => {\r\n    const result = next(action)\r\n    log.debug('action', action)\r\n    log.debug('next state', store.getState())\r\n    return result\r\n  }\r\n}\r\n\r\nfunction createLogHandler(level: LogLevel): LogHandler {\r\n  if (!minLevel) minLevel = readLogLevel()\r\n\r\n  return LEVELS.indexOf(level) >= LEVELS.indexOf(minLevel)\r\n    ? (msg, ...meta) => console[level](`${level}: ${msg}`, ...meta)\r\n    : () => {}\r\n}\r\n\r\nfunction readLogLevel(): LogLevel {\r\n  if (typeof window !== 'undefined' && window.localStorage) {\r\n    try {\r\n      const maybeLevel = window.localStorage.getItem(STORAGE_KEY)\r\n\r\n      if (\r\n        maybeLevel === 'debug' ||\r\n        maybeLevel === 'info' ||\r\n        maybeLevel === 'warn' ||\r\n        maybeLevel === 'error'\r\n      ) {\r\n        return maybeLevel\r\n      }\r\n    } catch (error) {\r\n      console.error('Could not read logLevel from localStorage', error)\r\n    }\r\n  }\r\n\r\n  return DEFAULT_LEVEL\r\n}\r\n","import {\r\n  AppPreferences,\r\n  BoardSummary,\r\n  BoardUpdate,\r\n  BoardRender,\r\n  Mode,\r\n} from '../types'\r\n\r\nimport {Action} from './types'\r\n\r\nexport const FETCH_APP_PREFERENCES = 'FETCH_APP_PREFERENCES'\r\nexport const UPDATE_APP_PREFERENCES = 'UPDATE_APP_PREFERENCES'\r\nexport const APP_PREFERENCES = 'APP_PREFERENCES'\r\nexport const CREATE_BOARD = 'CREATE_BOARD'\r\nexport const CREATE_BOARD_FROM_URL = 'CREATE_BOARD_FROM_URL'\r\nexport const GET_BOARD = 'GET_BOARD'\r\nexport const GET_BOARD_PACKAGE = 'GET_BOARD_PACKAGE'\r\nexport const UPDATE_BOARD = 'UPDATE_BOARD'\r\nexport const DELETE_BOARD = 'DELETE_BOARD'\r\nexport const DELETE_ALL_BOARDS = 'DELETE_ALL_BOARDS'\r\nexport const SET_MODE = 'SET_MODE'\r\nexport const TOGGLE_VISIBILITY = 'TOGGLE_VISIBILITY'\r\nexport const BOARD_RENDERED = 'BOARD_RENDERED'\r\nexport const BOARD_UPDATED = 'BOARD_UPDATED'\r\nexport const BOARD_DELETED = 'BOARD_DELETED'\r\nexport const BOARD_PACKAGED = 'BOARD_PACKAGED'\r\nexport const ALL_BOARDS_DELETED = 'ALL_BOARDS_DELETED'\r\nexport const WORKER_INITIALIZED = 'WORKER_INITIALIZED'\r\nexport const WORKER_ERRORED = 'WORKER_ERRORED'\r\nexport const DISMISS_ERROR = 'DISMISS_ERROR'\r\n\r\nexport const fetchAppPreferences = (): Action => ({\r\n  type: FETCH_APP_PREFERENCES,\r\n})\r\n\r\nexport const updateAppPreferences = (prefs: AppPreferences): Action => ({\r\n  type: UPDATE_APP_PREFERENCES,\r\n  payload: prefs,\r\n})\r\n\r\nexport const appPreferences = (prefs: AppPreferences): Action => ({\r\n  type: APP_PREFERENCES,\r\n  payload: prefs,\r\n})\r\n\r\nexport const createBoard = (\r\n  files: Array<File>,\r\n  dragAndDrop: boolean = false\r\n): Action => ({\r\n  type: CREATE_BOARD,\r\n  payload: files,\r\n  metadata: {dragAndDrop},\r\n})\r\n\r\nexport const createBoardFromUrl = (url: string): Action => ({\r\n  type: CREATE_BOARD_FROM_URL,\r\n  payload: url,\r\n})\r\n\r\nexport const getBoard = (id: string): Action => ({\r\n  type: GET_BOARD,\r\n  payload: id,\r\n})\r\n\r\nexport const updateBoard = (id: string, update: BoardUpdate): Action => ({\r\n  type: UPDATE_BOARD,\r\n  payload: {id, update},\r\n})\r\n\r\nexport const deleteBoard = (id: string): Action => ({\r\n  type: DELETE_BOARD,\r\n  payload: id,\r\n})\r\n\r\nexport const deleteAllBoards = (): Action => ({\r\n  type: DELETE_ALL_BOARDS,\r\n})\r\n\r\nexport const getBoardPackage = (id: string): Action => ({\r\n  type: GET_BOARD_PACKAGE,\r\n  payload: id,\r\n})\r\n\r\nexport const setMode = (mode: Mode): Action => ({\r\n  type: SET_MODE,\r\n  payload: mode,\r\n})\r\n\r\nexport const toggleVisibility = (id: string, solo: boolean): Action => ({\r\n  type: TOGGLE_VISIBILITY,\r\n  payload: {id, solo},\r\n})\r\n\r\nexport const boardRendered = (render: BoardRender, time: number): Action => ({\r\n  type: BOARD_RENDERED,\r\n  payload: render,\r\n  metadata: {time},\r\n})\r\n\r\nexport const boardUpdated = (board: BoardSummary): Action => ({\r\n  type: BOARD_UPDATED,\r\n  payload: board,\r\n})\r\n\r\nexport const boardDeleted = (id: string): Action => ({\r\n  type: BOARD_DELETED,\r\n  payload: id,\r\n})\r\n\r\nexport const boardPackaged = (\r\n  id: string,\r\n  name: string,\r\n  file: Blob\r\n): Action => ({\r\n  type: BOARD_PACKAGED,\r\n  payload: {id, name, file},\r\n})\r\n\r\nexport const allBoardsDeleted = (): Action => ({\r\n  type: ALL_BOARDS_DELETED,\r\n})\r\n\r\nexport const workerInitialized = (boards: Array<BoardSummary>): Action => ({\r\n  type: WORKER_INITIALIZED,\r\n  payload: boards,\r\n})\r\n\r\nexport const workerErrored = (request: Action, error: Error): Action => ({\r\n  type: WORKER_ERRORED,\r\n  payload: {\r\n    request,\r\n    error: {name: error.name, message: error.message, error: error.toString()},\r\n  },\r\n})\r\n\r\nexport const dismissError = (): Action => ({\r\n  type: DISMISS_ERROR,\r\n})\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n  // layer types\r\n  TYPE_COPPER: 'copper',\r\n  TYPE_SOLDERMASK: 'soldermask',\r\n  TYPE_SILKSCREEN: 'silkscreen',\r\n  TYPE_SOLDERPASTE: 'solderpaste',\r\n  TYPE_DRILL: 'drill',\r\n  TYPE_OUTLINE: 'outline',\r\n  TYPE_DRAWING: 'drawing',\r\n\r\n  // board sides\r\n  SIDE_TOP: 'top',\r\n  SIDE_BOTTOM: 'bottom',\r\n  SIDE_INNER: 'inner',\r\n  SIDE_ALL: 'all',\r\n\r\n  // cad packages\r\n  // internal use only, for now\r\n  _CAD_KICAD: 'kicad',\r\n  _CAD_ALTIUM: 'altium',\r\n  _CAD_ALLEGRO: 'allegro',\r\n  _CAD_EAGLE: 'eagle',\r\n  _CAD_EAGLE_LEGACY: 'eagle-legacy',\r\n  _CAD_EAGLE_OSHPARK: 'eagle-oshpark',\r\n  _CAD_EAGLE_PCBNG: 'eagle-pcbng',\r\n  _CAD_GEDA_PCB: 'geda-pcb',\r\n  _CAD_ORCAD: 'orcad',\r\n  _CAD_DIPTRACE: 'diptrace',\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = function flatMap(collection, iterator) {\r\n  return collection.reduce(function iterate(result, element) {\r\n    return result.concat(iterator(element))\r\n  }, [])\r\n}\r\n","'use strict'\r\n\r\nvar c = require('./constants')\r\n\r\nmodule.exports = [\r\n  // high-priority blacklist\r\n  {\r\n    type: null,\r\n    side: null,\r\n    matchers: [\r\n      // eagle gerber generation metadata\r\n      {\r\n        ext: 'gpi',\r\n        cad: [\r\n          c._CAD_EAGLE,\r\n          c._CAD_EAGLE_LEGACY,\r\n          c._CAD_EAGLE_OSHPARK,\r\n          c._CAD_EAGLE_PCBNG,\r\n        ],\r\n      },\r\n      // eagle drill generation metadata\r\n      {\r\n        ext: 'dri',\r\n        cad: [\r\n          c._CAD_EAGLE,\r\n          c._CAD_EAGLE_LEGACY,\r\n          c._CAD_EAGLE_OSHPARK,\r\n          c._CAD_EAGLE_PCBNG,\r\n        ],\r\n      },\r\n      // general data/BOM files\r\n      {ext: 'csv', cad: null},\r\n      // pick-n-place BOMs\r\n      {match: /pnp_bom/, cad: c._CAD_EAGLE_PCBNG},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_COPPER,\r\n    side: c.SIDE_TOP,\r\n    matchers: [\r\n      {ext: 'cmp', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'top', cad: [c._CAD_EAGLE_LEGACY, c._CAD_ORCAD]},\r\n      {ext: 'gtl', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'toplayer\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /top\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /f[._]cu/, cad: c._CAD_KICAD},\r\n      {match: /copper_top/, cad: c._CAD_EAGLE},\r\n      {match: /top_copper/, cad: c._CAD_EAGLE_PCBNG},\r\n      {match: /top copper/, cad: null},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_SOLDERMASK,\r\n    side: c.SIDE_TOP,\r\n    matchers: [\r\n      {ext: 'stc', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'tsm', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gts', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'smt', cad: c._CAD_ORCAD},\r\n      {ext: 'topsoldermask\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /topmask\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /f[._]mask/, cad: c._CAD_KICAD},\r\n      {match: /soldermask_top/, cad: c._CAD_EAGLE},\r\n      {match: /top_mask/, cad: c._CAD_EAGLE_PCBNG},\r\n      {match: /top solder resist/, cad: null},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_SILKSCREEN,\r\n    side: c.SIDE_TOP,\r\n    matchers: [\r\n      {ext: 'plc', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'tsk', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gto', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'sst', cad: c._CAD_ORCAD},\r\n      {ext: 'topsilkscreen\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /topsilk\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /f[._]silks/, cad: c._CAD_KICAD},\r\n      {match: /silkscreen_top/, cad: c._CAD_EAGLE},\r\n      {match: /top_silk/, cad: c._CAD_EAGLE_PCBNG},\r\n      {match: /top silk screen/, cad: null},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_SOLDERPASTE,\r\n    side: c.SIDE_TOP,\r\n    matchers: [\r\n      {ext: 'crc', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'tsp', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gtp', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'spt', cad: c._CAD_ORCAD},\r\n      {ext: 'tcream\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /toppaste\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /f[._]paste/, cad: c._CAD_KICAD},\r\n      {match: /solderpaste_top/, cad: c._CAD_EAGLE},\r\n      {match: /top_paste/, cad: c._CAD_EAGLE_PCBNG},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_COPPER,\r\n    side: c.SIDE_BOTTOM,\r\n    matchers: [\r\n      {ext: 'sol', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'bot', cad: [c._CAD_EAGLE_LEGACY, c._CAD_ORCAD]},\r\n      {ext: 'gbl', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'bottomlayer\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /bottom\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /b[._]cu/, cad: c._CAD_KICAD},\r\n      {match: /copper_bottom/, cad: c._CAD_EAGLE},\r\n      {match: /bottom_copper/, cad: c._CAD_EAGLE_PCBNG},\r\n      {match: /bottom copper/, cad: null},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_SOLDERMASK,\r\n    side: c.SIDE_BOTTOM,\r\n    matchers: [\r\n      {ext: 'sts', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'bsm', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gbs', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'smb', cad: c._CAD_ORCAD},\r\n      {ext: 'bottomsoldermask\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /bottommask\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /b[._]mask/, cad: c._CAD_KICAD},\r\n      {match: /soldermask_bottom/, cad: c._CAD_EAGLE},\r\n      {match: /bottom_mask/, cad: c._CAD_EAGLE_PCBNG},\r\n      {match: /bottom solder resist/, cad: null},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_SILKSCREEN,\r\n    side: c.SIDE_BOTTOM,\r\n    matchers: [\r\n      {ext: 'pls', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'bsk', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gbo', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'ssb', cad: c._CAD_ORCAD},\r\n      {ext: 'bottomsilkscreen\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /bottomsilk\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /b[._]silks/, cad: c._CAD_KICAD},\r\n      {match: /silkscreen_bottom/, cad: c._CAD_EAGLE},\r\n      {match: /bottom_silk/, cad: c._CAD_EAGLE_PCBNG},\r\n      {match: /bottom silk screen/, cad: null},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_SOLDERPASTE,\r\n    side: c.SIDE_BOTTOM,\r\n    matchers: [\r\n      {ext: 'crs', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'bsp', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gbp', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'spb', cad: c._CAD_ORCAD},\r\n      {ext: 'bcream\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /bottompaste\\.\\w+$/, cad: [c._CAD_GEDA_PCB, c._CAD_DIPTRACE]},\r\n      {match: /b[._]paste/, cad: c._CAD_KICAD},\r\n      {match: /solderpaste_bottom/, cad: c._CAD_EAGLE},\r\n      {match: /bottom_paste/, cad: c._CAD_EAGLE_PCBNG},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_COPPER,\r\n    side: c.SIDE_INNER,\r\n    matchers: [\r\n      {ext: 'ly\\\\d+', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gp?\\\\d+', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'in\\\\d+', cad: c._CAD_ORCAD},\r\n      {ext: 'internalplane\\\\d+\\\\.ger', cad: c._CAD_EAGLE_OSHPARK},\r\n      {match: /in(?:ner)?\\d+[._]cu/, cad: c._CAD_KICAD},\r\n      {match: /inner/, cad: c._CAD_DIPTRACE},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_OUTLINE,\r\n    side: c.SIDE_ALL,\r\n    matchers: [\r\n      {ext: 'dim', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'mil', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gml', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'gm\\\\d+', cad: [c._CAD_KICAD, c._CAD_ALTIUM]},\r\n      {ext: 'gko', cad: c._CAD_ALTIUM},\r\n      {ext: 'fab', cad: c._CAD_ORCAD},\r\n      {ext: 'drd', cad: c._CAD_ORCAD},\r\n      {match: /outline/, cad: [c._CAD_GEDA_PCB, c._CAD_EAGLE_PCBNG]},\r\n      {match: /boardoutline/, cad: [c._CAD_EAGLE_OSHPARK, c._CAD_DIPTRACE]},\r\n      {match: /edge[._]cuts/, cad: c._CAD_KICAD},\r\n      {match: /profile/, cad: c._CAD_EAGLE},\r\n      {match: /mechanical \\d+/, cad: null},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_DRILL,\r\n    side: c.SIDE_ALL,\r\n    matchers: [\r\n      {ext: 'txt', cad: [c._CAD_EAGLE_LEGACY, c._CAD_ALTIUM]},\r\n      {\r\n        ext: 'xln',\r\n        cad: [c._CAD_EAGLE, c._CAD_EAGLE_LEGACY, c._CAD_EAGLE_OSHPARK],\r\n      },\r\n      {ext: 'exc', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'drd', cad: c._CAD_EAGLE_LEGACY},\r\n      {ext: 'drl', cad: [c._CAD_KICAD, c._CAD_DIPTRACE]},\r\n      {ext: 'tap', cad: c._CAD_ORCAD},\r\n      {ext: 'npt', cad: c._CAD_ORCAD},\r\n      {ext: 'plated-drill\\\\.cnc', cad: c._CAD_GEDA_PCB},\r\n      {match: /fab/, cad: c._CAD_GEDA_PCB},\r\n      {match: /npth/, cad: c._CAD_KICAD},\r\n      {match: '/drill/', cad: c._CAD_EAGLE_PCBNG},\r\n    ],\r\n  },\r\n  {\r\n    type: c.TYPE_DRAWING,\r\n    side: null,\r\n    matchers: [\r\n      {ext: 'pos', cad: c._CAD_KICAD},\r\n      {ext: 'art', cad: c._CAD_ALLEGRO},\r\n      {ext: 'gbr', cad: null},\r\n      {ext: 'gbx', cad: null},\r\n      {ext: 'ger', cad: null},\r\n      {ext: 'pho', cad: null},\r\n    ],\r\n  },\r\n]\r\n","const MIMETYPE_ZIP = [\r\n  'application/zip',\r\n  'application/x-zip',\r\n  'application/x-zip-compressed',\r\n]\r\n\r\nexport function isZip(file: File | Blob): boolean {\r\n  return (\r\n    ('name' in file && file.name.endsWith('.zip')) ||\r\n    MIMETYPE_ZIP.includes(file.type)\r\n  )\r\n}\r\n","import MD5 from 'md5.js'\r\nimport * as State from '../state'\r\nimport {isZip} from '../util'\r\nimport {getDefaultLayerOptions} from '../layers'\r\nimport {BoardRender} from '../types'\r\nimport {\r\n  AnalyticsEvent,\r\n  FileUploadType,\r\n  BoardRenderAnalyticsPayload,\r\n} from './types'\r\n\r\nexport const APP_OPENED = 'appOpened'\r\nexport const CREATE_BOARD_REQUEST = 'createBoardRequest'\r\nexport const GET_BOARD_REQUEST = 'getBoardRequest'\r\nexport const BOARD_RENDERED = 'boardRendered'\r\nexport const BOARD_UPDATED = 'boardUpdated'\r\nexport const BOARD_DELETED = 'boardDeleted'\r\nexport const BOARD_DOWNLOADED = 'boardDownloaded'\r\nexport const ERROR = 'error'\r\n\r\nexport default function createEvent(\r\n  action: State.Action,\r\n  nextState: State.State,\r\n  prevState: State.State\r\n): AnalyticsEvent | null {\r\n  switch (action.type) {\r\n    case State.CREATE_BOARD: {\r\n      const source = action.metadata.dragAndDrop ? 'dragAndDrop' : 'filePicker'\r\n      let uploadType: FileUploadType = 'files'\r\n\r\n      if (action.payload.every(isZip)) {\r\n        uploadType = 'zip'\r\n      } else if (action.payload.some(isZip)) {\r\n        uploadType = 'mixed'\r\n      }\r\n\r\n      return [CREATE_BOARD_REQUEST, {source, uploadType}]\r\n    }\r\n\r\n    case State.CREATE_BOARD_FROM_URL: {\r\n      return [CREATE_BOARD_REQUEST, {source: 'url'}]\r\n    }\r\n\r\n    case State.GET_BOARD: {\r\n      return [GET_BOARD_REQUEST, {}]\r\n    }\r\n\r\n    case State.BOARD_RENDERED: {\r\n      const payload = {\r\n        ...getRenderPayload(action.payload),\r\n        renderTime: action.metadata.time,\r\n      }\r\n\r\n      return [BOARD_RENDERED, payload]\r\n    }\r\n\r\n    case State.BOARD_UPDATED: {\r\n      const payload =\r\n        nextState.board && action.payload.id === nextState.board.id\r\n          ? getRenderPayload(nextState.board)\r\n          : {}\r\n\r\n      return [BOARD_UPDATED, payload]\r\n    }\r\n\r\n    case State.BOARD_DELETED: {\r\n      const payload =\r\n        prevState.board && action.payload === prevState.board.id\r\n          ? getRenderPayload(prevState.board)\r\n          : {}\r\n\r\n      return [BOARD_DELETED, payload]\r\n    }\r\n\r\n    case State.BOARD_PACKAGED: {\r\n      const payload =\r\n        nextState.board && action.payload.id === nextState.board.id\r\n          ? getRenderPayload(nextState.board)\r\n          : {}\r\n\r\n      return [BOARD_DOWNLOADED, payload]\r\n    }\r\n\r\n    case State.WORKER_INITIALIZED: {\r\n      return [APP_OPENED, {savedBoards: action.payload.length}]\r\n    }\r\n\r\n    case State.WORKER_ERRORED: {\r\n      const trigger = action.payload.request.type\r\n      const message = action.payload.error.message\r\n\r\n      return [ERROR, {trigger, message}]\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nfunction getRenderPayload(board: BoardRender): BoardRenderAnalyticsPayload {\r\n  const {options, gerberOptions, drillOptions} = board\r\n  const defaultGerberOptions = getDefaultLayerOptions(board.layers, 'gerber')\r\n  const defaultDrillOptions = getDefaultLayerOptions(board.layers, 'drill')\r\n\r\n  const gerberUnits = gerberOptions.units || defaultGerberOptions.units\r\n  const gerberZeroSuppression =\r\n    gerberOptions.zeroSuppression || defaultGerberOptions.zeroSuppression\r\n  const gerberCoordFormat =\r\n    gerberOptions.coordinateFormat || defaultGerberOptions.coordinateFormat\r\n\r\n  const drillUnits = drillOptions.units || defaultDrillOptions.units\r\n  const drillZeroSuppression =\r\n    drillOptions.zeroSuppression || defaultDrillOptions.zeroSuppression\r\n  const drillCoordFormat =\r\n    drillOptions.coordinateFormat || defaultDrillOptions.coordinateFormat\r\n\r\n  const payload: BoardRenderAnalyticsPayload = {\r\n    useOutline: options.useOutline,\r\n    outlineGapFill: options.outlineGapFill,\r\n    colorSoldermask: options.color.sm,\r\n    colorSilkscreen: options.color.ss,\r\n    colorCopperFinish: options.color.cf,\r\n\r\n    gerberUnits,\r\n    gerberZeroSuppression,\r\n    gerberCoordinateFormat: gerberCoordFormat && gerberCoordFormat.join(','),\r\n\r\n    drillUnits,\r\n    drillZeroSuppression,\r\n    drillCoordinateFormat: drillCoordFormat && drillCoordFormat.join(','),\r\n\r\n    sourceUrlHash: board.sourceUrl\r\n      ? new MD5().update(board.sourceUrl).digest('hex')\r\n      : null,\r\n    sourceFilesHash: board.sourceIds\r\n      .reduce<MD5>((hasher, id) => hasher.update(id), new MD5())\r\n      .digest('hex'),\r\n  }\r\n\r\n  return payload\r\n}\r\n","// analytics module via mixpanel\r\nimport mixpanel from 'mixpanel-browser'\r\n\r\nimport log from '../logger'\r\nimport * as State from '../state'\r\nimport createEvent from './create-event'\r\n\r\nconst MIXPANEL_ID = process.env.MIXPANEL_ID\r\nlet userId: string | null = null\r\n\r\nexport function getAnalyticsUserId(): string | null {\r\n  return userId\r\n}\r\n\r\nexport function createAnalyticsMiddleware(): State.Middleware {\r\n  if (MIXPANEL_ID) {\r\n    log.debug('initializing mixpanel')\r\n    mixpanel.init(MIXPANEL_ID, {\r\n      opt_out_tracking_by_default: true,\r\n      loaded: (mp): void => {\r\n        userId = mp.get_distinct_id()\r\n      },\r\n    })\r\n  } else {\r\n    log.debug('no mixpanel token found; not initializing')\r\n  }\r\n\r\n  return store => next => action => {\r\n    const prevState = store.getState()\r\n    const result = next(action)\r\n    const nextState = store.getState()\r\n\r\n    if (userId) {\r\n      const nextOptIn = nextState.appPreferences.analyticsOptIn\r\n      const event = createEvent(action, nextState, prevState)\r\n\r\n      // ensure opt-in preferences are communicated to mixpanel\r\n      if (nextOptIn && mixpanel.has_opted_out_tracking()) {\r\n        mixpanel.opt_in_tracking()\r\n      } else if (!nextOptIn && !mixpanel.has_opted_out_tracking) {\r\n        mixpanel.opt_out_tracking()\r\n      }\r\n\r\n      // only track anything if opted in\r\n      if (nextOptIn && event) {\r\n        const [name, payload] = event\r\n\r\n        log.debug('track', event)\r\n        mixpanel.track(name, payload)\r\n      } else if (event) {\r\n        log.debug('did not track', event)\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = function getCommonCad(matches) {\r\n  var cadCount = matches.reduce(function(counts, match) {\r\n    counts[match.cad] = counts[match.cad] + 1 || 1\r\n    return counts\r\n  }, {})\r\n\r\n  return Object.keys(cadCount).reduce(\r\n    function(maxAndName, name) {\r\n      var count = cadCount[name]\r\n      if (count > maxAndName.max) return {max: count, name: name}\r\n      return maxAndName\r\n    },\r\n    {max: 0, name: null}\r\n  ).name\r\n}\r\n","'use strict'\r\n\r\nvar extend = require('xtend')\r\n\r\nvar matchers = require('./matchers')\r\n\r\nmodule.exports = function getMatches(filename) {\r\n  return matchers.map(matcherToFileMatches).filter(Boolean)\r\n\r\n  function matcherToFileMatches(matcher) {\r\n    if (!matcher.match.test(filename)) return null\r\n    return extend(matcher, {filename: filename})\r\n  }\r\n}\r\n","'use strict'\r\n\r\nvar flatMap = require('./flat-map')\r\nvar layerTypes = require('./layer-types')\r\n\r\nmodule.exports = flatMap(layerTypes, layerTypeToMatchers)\r\n\r\nfunction layerTypeToMatchers(layer) {\r\n  return flatMap(layer.matchers, matcherToCadMatchers)\r\n\r\n  function matcherToCadMatchers(matcher) {\r\n    var match = matcher.ext\r\n      ? new RegExp('\\\\.' + matcher.ext + '$', 'i')\r\n      : new RegExp(matcher.match, 'i')\r\n\r\n    return [].concat(matcher.cad).map(mergeLayerWithCad)\r\n\r\n    function mergeLayerWithCad(cad) {\r\n      return {\r\n        type: layer.type,\r\n        side: layer.side,\r\n        match: match,\r\n        cad: cad,\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}