{"version":3,"sources":["webpack:///./src/hooks.ts","webpack:///./src/ui/animation.tsx","webpack:///./src/ui/buttons/Button.tsx","webpack:///./src/events.ts","webpack:///./src/ui/Icon.tsx","webpack:///./src/ui/buttons/DeleteButton.tsx","webpack:///./src/ui/ColorPill.tsx","webpack:///./src/ui/Drawer.tsx","webpack:///./src/ui/inputs.tsx","webpack:///./src/ui/LazyThumbnail.tsx","webpack:///./src/ui/Logo.tsx","webpack:///./src/ui/Main.tsx","webpack:///./src/ui/PageTitle.tsx","webpack:///./src/ui/section.tsx","webpack:///./src/ui/SvgRender.tsx","webpack:///./src/BoardDisplay/display.ts","webpack:///./src/BoardDisplay/PanZoom.tsx","webpack:///./src/BoardDisplay/Controls.tsx","webpack:///./src/BoardDisplay/LayersRender.tsx","webpack:///./src/BoardDisplay/index.tsx","webpack:///./src/FileList/VisibilityButton.tsx","webpack:///./src/FileList/FileItem.tsx","webpack:///./src/FileList/SideItem.tsx","webpack:///./src/FileList/SideList.tsx","webpack:///./src/FileList/ShowFilenamesButton.tsx","webpack:///./src/FileList/index.tsx","webpack:///./src/BoardList/ShowButton.tsx","webpack:///./src/BoardList/BoardItem.tsx","webpack:///./src/BoardList/SavedBoardList.tsx","webpack:///./src/BoardList/index.tsx","webpack:///./src/pkg.ts","webpack:///./src/AppSettings/SettingsDrawer.tsx","webpack:///./src/AppSettings/AnalyticsOptInModal.tsx","webpack:///./src/AppSettings/index.tsx","webpack:///./src/BoardSettings/name.tsx","webpack:///./src/BoardSettings/ModeSelect.tsx","webpack:///./src/BoardSettings/values.ts","webpack:///./src/BoardSettings/BoardUrl.tsx","webpack:///./src/BoardSettings/SettingsButtons.tsx","webpack:///./src/BoardSettings/color.tsx","webpack:///./src/BoardSettings/render.tsx","webpack:///./src/BoardSettings/layers.tsx","webpack:///./src/BoardSettings/SettingsForm.tsx","webpack:///./src/BoardSettings/index.tsx","webpack:///./src/Nav/OpenFileDrawer.tsx","webpack:///./src/Nav/FileControls.tsx","webpack:///./src/Nav/Footer.tsx","webpack:///./src/Nav/index.tsx","webpack:///./src/LoadFiles/FileInput.tsx","webpack:///./src/LoadFiles/UrlInput.tsx","webpack:///./src/LoadFiles/index.tsx","webpack:///./src/ErrorToast/Toast.tsx","webpack:///./src/ErrorToast/index.tsx","webpack:///./src/App.tsx"],"names":["useTimeout","handler","delay","useEffect","timeout","window","setTimeout","clearTimeout","usePrevious","value","valueRef","useRef","current","useWindowListener","event","addEventListener","removeEventListener","Fade","props","CSSTransition","in","Boolean","classNames","mountOnEnter","unmountOnExit","children","Slide","from","getButtonStyle","cx","disabled","className","Button","onClick","title","type","suppressHydrationWarning","preventDefault","stopPropagation","select","currentTarget","PREFIX_BY_ICON","check","circle","cog","copy","expand","eye","plus","spinner","square","times","Icon","name","style","faProps","icon","library","add","faCheck","faCheckSquare","faChevronLeft","faChevronRight","faCircle","faCog","faCopy","faDotCircle","faExpand","faEye","faEyeSlash","faFileDownload","faFileUpload","faPlus","faSearchMinus","faSearchPlus","faSlidersH","faSpinner","faSquare","faTimes","faTrashAlt","faQuestionCircle","DeleteButton","useState","armed","setArmed","ColorPill","color","slice","dark","contrast","backgroundColor","Drawer","open","close","Label","rest","pointer","HiddenInput","Checkbox","inputProps","iconName","checked","LazyThumbnail","imageRef","loaded","setLoaded","handleLoad","complete","url","spinnerColor","background","ref","src","pulse","Logo","width","height","fill","viewBox","xmlns","d","Main","onDragOver","onDrop","PageTitle","subtitle","TitledSection","SectionColumnLeft","SectionColumnRight","SvgRender","React","memo","_SvgRender","source","dangerouslySetInnerHTML","__html","INITIAL_STATE","x","y","step","SCALE_STEP_COUNT","SCALE_MIN_LOG","Math","log","SCALE_INITIAL","SCALE_STEP_LOG","SCALE_STEPS","Array","map","_","i","pow","E","zoom","prevState","delta","centerX","centerY","prevX","prevY","prevStep","getScale","prevScale","scale","nextStep","nextScale","scaleRatio","pan","deltaX","deltaY","round","max","min","getEventCenter","pageX","innerWidth","pageY","innerHeight","PanZoom","containerRef","panStart","count","deltaMode","threshhold","DOM_DELTA_LINE","sign","abs","direction","onMouseDown","onMouseUp","onMouseMove","Controls","grabbing","setGrabbing","reset","zoomIn","zoomOut","sliderLeft","stepToScale","handleGrabMove","getBoundingClientRect","left","clientX","undefined","LayersRender","layerVisibility","layers","filter","ly","converter","layer","length","strokeLinecap","strokeLinejoin","strokeWidth","fillRule","vb","asString","key","id","defs","join","transform","groupProps","stroke","percent","n","getId","b","BoardDisplay","useAppState","mode","board","loading","displayState","setDisplayState","prevBoard","show","controllerProps","args","useLayoutEffect","dn","top","bottom","clip","TOP_SIDES","SIDE_TOP","SIDE_ALL","BOTTOM_SIDES","SIDE_BOTTOM","VisibilityButton","dispatch","side","visible","includes","layerVisible","tooltip","layerTooltip","iconProps","toggleVisibility","shiftKey","FileItem","filename","showFilenames","SideList","label","SIDES","SIDE_INNER","onWheel","sideProps","sort","orderLayers","ShowFilenamesButton","toggle","FileList","setShowFilenames","ShowButton","BoardItem","selected","options","thumbnail","sm","SavedBoardList","selectedId","boards","onItemClick","BoardList","savedBoards","setShow","setSelected","prevLoading","haveBoards","showList","getBoard","AUTHOR_NAME","process","REPO_URL_MATCH","match","REPO_URL","CONTRIBUTORS_URL","PRIVACY_URL","FOOTER","SettingsDrawer","appPreferences","analyticsOptIn","onChange","updateAppPreferences","target","deleteAllBoards","getAnalyticsUserId","onFocus","readOnly","AnalyticsOptInToast","initialValues","onSubmit","values","fieldProps","field","href","rel","HELP_HREF","AppSettings","setOpen","buttonClassName","toggleOpen","STYLE","INPUT_STYLE","BoardName","BoardNameInput","autoComplete","data-lpignore","ModeSelect","buttons","setMode","boardRenderToValues","gerberOptions","layerOptionsToFormValue","drillOptions","reduce","result","parseFormBoardOptions","formOptions","outlineGapFill","Number","isFinite","parseFormLayerOptions","coordinateFormat","zeroSuppression","units","isArray","parsed","isInteger","warn","BoardUrl","success","setSuccess","location","origin","pathname","copyValue","encodeURIComponent","textStyle","iconStyle","onCopy","focus","clipboardData","setData","document","execCommand","onBlur","DELETE_BUTTON_STYLE","SettingsButtons","COLOR_PRESETS","cf","ss","COLOR_IDS","COLOR_NAMES","stripAlpha","c","ColorInput","colorId","form","setFieldValue","ColorPresetsField","fieldName","component","ColorPresetInput","ColorFields","preset","ColorPresetOption","every","a","BoardColorSwatch","boardColor","index","collection","previous","needsBorder","prevHasBorder","bl","NUMBER_INPUT_STYLE","UseOutlineInput","GapFillInput","useOutline","CoordFormatFields","renderName","overridden","defaultValue","OverridableField","placeholder","RadioGroup","opt","ZeroSuppressionFields","UnitsFields","OverrideCheckbox","LayerList","LayerItem","LayerTypeSelect","layerId","validSides","typeToValidSides","setValues","ALL_TYPES","t","LayerSideSelect","push","LayerColorInput","SettingsForm","sourceUrl","defaultGerberOptions","getDefaultLayerOptions","defaultDrillOptions","handleDelete","deleteBoard","updateBoard","formUpdates","Object","keys","update","valuesToBoardUpdate","onReset","formProps","delete","BoardSettings","modalContentsRef","$modalContents","shift","clientWidth","updating","OpenFileDrawer","handleFiles","handleUrl","multiple","formikProps","FileControls","downloading","toggleUploadOpen","getBoardPackage","Footer","toLowerCase","Nav","FileInput","UrlInput","locationRef","loc","enableReinitialize","htmlFor","LoadFiles","Toast","dismiss","ErrorToast","error","prevError","prevErrorMessage","message","dismissError","App","files","dataTransfer","createBoard","createBoardFromUrl"],"mappings":"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","file":"8.62dd0859207ac9f580b8.js","sourcesContent":["// reusable utility hooks\r\nimport {useEffect, useRef} from 'react'\r\n\r\nexport function useTimeout(handler: () => unknown, delay: number | null): void {\r\n  useEffect(() => {\r\n    if (delay !== null) {\r\n      const timeout = window.setTimeout(handler, delay)\r\n      return () => window.clearTimeout(timeout)\r\n    }\r\n  }, [delay])\r\n}\r\n\r\nexport function usePrevious<Value>(value: Value): Value | null {\r\n  const valueRef = useRef<Value | null>(null)\r\n\r\n  useEffect(() => {\r\n    valueRef.current = value\r\n  }, [value])\r\n\r\n  return valueRef.current\r\n}\r\n\r\nexport function useWindowListener<Event extends keyof WindowEventMap>(\r\n  event: Event,\r\n  handler: (event: WindowEventMap[Event]) => unknown\r\n): void {\r\n  useEffect(() => {\r\n    window.addEventListener(event, handler)\r\n    return () => window.removeEventListener(event, handler)\r\n  })\r\n}\r\n\r\nexport function useLocation(): Location | null {\r\n  const locationRef = useRef<Location | null>(null)\r\n\r\n  useEffect(() => {\r\n    locationRef.current = window.location\r\n  }, [])\r\n\r\n  return locationRef.current\r\n}\r\n","import React from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\ntype AnimationProps = {\r\n  in: boolean | string | null | undefined\r\n  children: React.ReactNode\r\n}\r\n\r\nexport type FadeProps = AnimationProps\r\n\r\nconst FADE_STYLE = 'fade'\r\n\r\nexport function Fade(props: AnimationProps): JSX.Element {\r\n  return (\r\n    <CSSTransition\r\n      in={Boolean(props.in)}\r\n      classNames={FADE_STYLE}\r\n      timeout={500}\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      {props.children}\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport type SlideProps = AnimationProps & {\r\n  from: 'top' | 'bottom' | 'left' | 'right'\r\n}\r\n\r\nconst SLIDE_STYLE = 'slide'\r\n\r\nexport function Slide(props: SlideProps): JSX.Element {\r\n  return (\r\n    <CSSTransition\r\n      in={Boolean(props.in)}\r\n      classNames={`${SLIDE_STYLE}-${props.from}`}\r\n      timeout={500}\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      {props.children}\r\n    </CSSTransition>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\n\r\nexport type ButtonProps = {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\r\n  disabled?: boolean\r\n  className?: string\r\n  children?: React.ReactNode\r\n  title?: string\r\n  type?: 'button' | 'submit' | 'reset'\r\n}\r\n\r\nexport const BUTTON_CLASSNAME = 'br2'\r\n\r\nexport function getButtonStyle(props: ButtonProps): string {\r\n  return cx(\r\n    {\r\n      'o-40': props.disabled,\r\n      'pointer bg-animate hover-bg-black-20': !props.disabled,\r\n    },\r\n    BUTTON_CLASSNAME,\r\n    props.className\r\n  )\r\n}\r\n\r\nexport function Button(props: ButtonProps): JSX.Element {\r\n  const {onClick, title, children} = props\r\n  const type = props.type || 'button'\r\n  const disabled = Boolean(props.disabled)\r\n  const className = getButtonStyle(props)\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      className={className}\r\n      title={title}\r\n      suppressHydrationWarning={true}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n","// event handling helpers\r\n\r\nimport {SyntheticEvent} from 'react'\r\n\r\nexport function preventDefault(event: SyntheticEvent | Event): void {\r\n  event.preventDefault()\r\n}\r\n\r\nexport function stopPropagation(event: SyntheticEvent | Event): void {\r\n  event.stopPropagation()\r\n}\r\n\r\nexport function select(event: SyntheticEvent<HTMLInputElement>): void {\r\n  event.currentTarget.select()\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport {Omit} from '../types'\r\n\r\nimport {\r\n  FontAwesomeIcon as FaIcon,\r\n  Props as FaIconProps,\r\n} from '@fortawesome/react-fontawesome'\r\n\r\nimport {\r\n  library,\r\n  IconPrefix as FaIconPrefix,\r\n  IconProp as FaIconProp,\r\n} from '@fortawesome/fontawesome-svg-core'\r\n\r\nimport {\r\n  faCheckSquare,\r\n  faCircle,\r\n  faCopy,\r\n  faDotCircle,\r\n  faEye,\r\n  faEyeSlash,\r\n  faSquare,\r\n  faTrashAlt,\r\n} from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport {\r\n  faCheck,\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faCog,\r\n  faExpand,\r\n  faFileDownload,\r\n  faFileUpload,\r\n  faPlus,\r\n  faQuestionCircle,\r\n  faSearchMinus,\r\n  faSearchPlus,\r\n  faSlidersH,\r\n  faSpinner,\r\n  faTimes,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst PREFIX_BY_ICON = {\r\n  check: 'fas',\r\n  'check-square': 'far',\r\n  'chevron-left': 'fas',\r\n  'chevron-right': 'fas',\r\n  circle: 'far',\r\n  cog: 'fas',\r\n  copy: 'far',\r\n  'dot-circle': 'far',\r\n  expand: 'fas',\r\n  eye: 'far',\r\n  'eye-slash': 'far',\r\n  'file-download': 'fas',\r\n  'file-upload': 'fas',\r\n  plus: 'fas',\r\n  'question-circle': 'fas',\r\n  'search-plus': 'fas',\r\n  'search-minus': 'fas',\r\n  'sliders-h': 'fas',\r\n  spinner: 'fas',\r\n  square: 'far',\r\n  times: 'fas',\r\n  'trash-alt': 'far',\r\n}\r\n\r\nexport type IconName = keyof typeof PREFIX_BY_ICON\r\n\r\nexport type IconProps = {\r\n  name: IconName\r\n  className?: string\r\n  style?: React.CSSProperties\r\n  faProps?: Omit<FaIconProps, 'icon' | 'className'>\r\n}\r\n\r\nlibrary.add(\r\n  faCheck,\r\n  faCheckSquare,\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faCircle,\r\n  faCog,\r\n  faCopy,\r\n  faDotCircle,\r\n  faExpand,\r\n  faEye,\r\n  faEyeSlash,\r\n  faFileDownload,\r\n  faFileUpload,\r\n  faPlus,\r\n  faSearchMinus,\r\n  faSearchPlus,\r\n  faSlidersH,\r\n  faSpinner,\r\n  faSquare,\r\n  faTimes,\r\n  faTrashAlt,\r\n  faQuestionCircle\r\n)\r\n\r\nexport function Icon(props: IconProps): JSX.Element {\r\n  const {name, style, faProps} = props\r\n  const icon: FaIconProp = [PREFIX_BY_ICON[name] as FaIconPrefix, name]\r\n  const className = cx(props.className, 'relative w2 h2 pa2')\r\n\r\n  return (\r\n    <div className={className} style={style}>\r\n      <span className=\"db absolute absolute--center\">\r\n        <FaIcon icon={icon} {...faProps} />\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {useWindowListener} from '../../hooks'\r\nimport {stopPropagation} from '../../events'\r\nimport {Icon} from '../Icon'\r\n\r\nexport type DeleteButtonProps = {\r\n  className?: string\r\n  onClick: () => void\r\n}\r\n\r\nconst DELETE_ICON = 'trash-alt'\r\nconst DELETE_COPY = 'delete?'\r\n\r\nconst STYLE = 'flex items-center bn pa0 br2 pointer c-animate overflow-hidden'\r\nconst ARMED_STYLE = 'white bg-red hover-bg-dark-red'\r\nconst DISARMED_STYLE = 'red bg-white hover-bg-black-20'\r\n\r\nconst WRAPPER_STYLE = 'flex-none mw-animate overflow-hidden'\r\nconst WRAPPER_ARMED_STYLE = 'mw4'\r\nconst WRAPPER_DISARMED_STYLE = 'mw0'\r\n\r\nconst COPY_STYLE = 'dib pl1 pr2'\r\n\r\nexport function DeleteButton(props: DeleteButtonProps): JSX.Element {\r\n  const [armed, setArmed] = useState(false)\r\n  const className = cx(\r\n    STYLE,\r\n    armed ? ARMED_STYLE : DISARMED_STYLE,\r\n    props.className\r\n  )\r\n\r\n  useWindowListener('click', () => armed && setArmed(false))\r\n\r\n  return (\r\n    <button type=\"button\" onClick={handleClick} className={className}>\r\n      <Icon name={DELETE_ICON} />\r\n      <div\r\n        className={cx(\r\n          WRAPPER_STYLE,\r\n          armed ? WRAPPER_ARMED_STYLE : WRAPPER_DISARMED_STYLE\r\n        )}\r\n      >\r\n        <span className={COPY_STYLE}>{DELETE_COPY}</span>\r\n      </div>\r\n    </button>\r\n  )\r\n\r\n  function handleClick(event: React.MouseEvent): void {\r\n    stopPropagation(event)\r\n\r\n    if (armed) {\r\n      setArmed(false)\r\n      props.onClick()\r\n    } else {\r\n      setArmed(true)\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport contrast from 'contrast'\r\n\r\nexport type ColorPillProps = {\r\n  color: string\r\n  className?: string\r\n}\r\n\r\nexport function ColorPill(props: ColorPillProps): JSX.Element {\r\n  const color = props.color.slice(0, 7)\r\n  const dark = contrast(color) === 'dark'\r\n  const className = cx(\r\n    'border-box flex-none pv1 ph2 br-pill code f6',\r\n    dark ? 'white' : 'near-black ba',\r\n    props.className\r\n  )\r\n  const style = {backgroundColor: color}\r\n\r\n  return (\r\n    <span className={className} style={style}>\r\n      {color}\r\n    </span>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Slide} from './animation'\r\nimport {Button} from './buttons'\r\nimport {Icon} from './Icon'\r\n\r\nconst STYLE =\r\n  'fixed top-1 right-1 z-2 w-25 nt2 nr2 pv2 ph3 br3 near-black bg-white shadow'\r\nconst TITLE_BAR_STYLE = 'flex items-center mb3'\r\nconst TITLE_STYLE = 'mr-auto f3 lh-title mv0 normal'\r\nconst BUTTON_STYLE = 'flex-none nr2 f4'\r\n\r\nexport type DrawerProps = {\r\n  title: string\r\n  open: boolean\r\n  children: React.ReactNode\r\n  close: () => unknown\r\n}\r\n\r\nexport function Drawer(props: DrawerProps): JSX.Element {\r\n  const {title, open, children, close} = props\r\n\r\n  return (\r\n    <Slide in={open} from=\"right\">\r\n      <section className={STYLE}>\r\n        <div className={TITLE_BAR_STYLE}>\r\n          <h2 className={TITLE_STYLE}>{title}</h2>\r\n          <Button onClick={close} className={BUTTON_STYLE}>\r\n            <Icon name=\"times\" />\r\n          </Button>\r\n        </div>\r\n        {children}\r\n      </section>\r\n    </Slide>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {Icon} from './Icon'\r\n\r\nexport type LabelProps = {\r\n  className?: string\r\n  disabled?: boolean\r\n  children: React.ReactNode\r\n} & React.LabelHTMLAttributes<HTMLLabelElement>\r\n\r\nexport const LABEL_CLASSNAME = 'flex items-center'\r\n\r\nexport function Label(props: LabelProps): JSX.Element {\r\n  const {className, disabled, children, ...rest} = props\r\n  const style = cx(LABEL_CLASSNAME, className, {pointer: !disabled})\r\n\r\n  return (\r\n    <label className={style} {...rest}>\r\n      {children}\r\n    </label>\r\n  )\r\n}\r\n\r\nexport type InputProps = React.InputHTMLAttributes<HTMLInputElement>\r\n\r\nexport function HiddenInput(props: InputProps): JSX.Element {\r\n  return <input className=\"clip\" {...props} />\r\n}\r\n\r\nexport function Checkbox(props: InputProps): JSX.Element {\r\n  const {className, children, ...inputProps} = props\r\n  const iconName =\r\n    props.value || props.checked === true ? 'check-square' : 'square'\r\n\r\n  return (\r\n    <Label className={className}>\r\n      <HiddenInput type=\"checkbox\" {...inputProps} />\r\n      <Icon className=\"nl2\" name={iconName} />\r\n      {children}\r\n    </Label>\r\n  )\r\n}\r\n","import React, {useState, useRef, useEffect} from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {Icon} from './Icon'\r\n\r\nexport type LazyThumbnailProps = {\r\n  url: string\r\n  spinnerColor: string\r\n  className?: string\r\n}\r\n\r\nconst STYLE = 'flex items-center justify-center'\r\n\r\nexport function LazyThumbnail(props: LazyThumbnailProps): JSX.Element {\r\n  const imageRef = useRef<HTMLImageElement>(null)\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const handleLoad = (): void => setLoaded(true)\r\n\r\n    if (imageRef.current) {\r\n      if (!imageRef.current.complete) {\r\n        setLoaded(false)\r\n        imageRef.current.addEventListener('load', handleLoad)\r\n      } else {\r\n        handleLoad()\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener('load', handleLoad)\r\n      }\r\n    }\r\n  })\r\n\r\n  const {url, spinnerColor} = props\r\n  const className = cx(STYLE, props.className)\r\n  const background = loaded\r\n    ? `url(\"${url}\") no-repeat center/contain`\r\n    : 'transparent'\r\n\r\n  return (\r\n    <div className={className} style={{background}}>\r\n      <img className=\"clip\" ref={imageRef} src={url} />\r\n      {!loaded && (\r\n        <Icon\r\n          name=\"spinner\"\r\n          className=\"f2\"\r\n          style={{color: spinnerColor}}\r\n          faProps={{pulse: true}}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","// tracespace logo component\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\n\r\nexport type LogoProps = {\r\n  width?: number | string\r\n  height?: number | string\r\n  color?: string\r\n  className?: string\r\n}\r\n\r\nexport function Logo(props: LogoProps): JSX.Element {\r\n  const width = props.width || props.height || '32px'\r\n  const height = props.height || width || '32px'\r\n  const fill = props.color || 'currentColor'\r\n\r\n  return (\r\n    <svg\r\n      width={`${width}`}\r\n      height={`${height}`}\r\n      fill={fill}\r\n      viewBox=\"0 0 36 36\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={cx('dib', props.className)}\r\n    >\r\n      <path d=\"M22 14H36V0H16L0 16V36H14V22L22 14Z M36 28C36 32.4183 32.4183 36 28 36C23.5817 36 20 32.4183 20 28C20 23.5817 23.5817 20 28 20C32.4183 20 36 23.5817 36 28Z\" />\r\n    </svg>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport type MainProps = {\r\n  children: React.ReactNode\r\n  onDragOver: (event: React.DragEvent<HTMLElement>) => void\r\n  onDrop: (event: React.DragEvent<HTMLElement>) => void\r\n}\r\n\r\nconst STYLE = 'sans relative overflow-hidden h-100 pa3 white bg-gradient'\r\n\r\nexport function Main(props: MainProps): JSX.Element {\r\n  const {children, onDragOver, onDrop} = props\r\n\r\n  return (\r\n    <main className={STYLE} onDragOver={onDragOver} onDrop={onDrop}>\r\n      {children}\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {Logo} from './Logo'\r\n\r\nexport type PageTitleProps = {\r\n  subtitle?: string\r\n  className?: string\r\n}\r\n\r\nexport function PageTitle(props: PageTitleProps): JSX.Element {\r\n  const {subtitle, className} = props\r\n\r\n  return (\r\n    <div className={cx('dib', className)}>\r\n      <Logo className=\"pl1 mr3 v-btm brand\" />\r\n      <h1 className=\"dib mv0 f3 lh-title normal\">\r\n        tracespace\r\n        {subtitle && <span className=\"b\">{` ${subtitle}`}</span>}\r\n      </h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport type TitledSectionProps = {\r\n  title: string\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function TitledSection(props: TitledSectionProps): JSX.Element {\r\n  const {title, children} = props\r\n\r\n  return (\r\n    <section className=\"tl mb4\">\r\n      <h3 className=\"mt0 mb2 f5 lh-title b\">{title}</h3>\r\n      {children}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport function SectionColumnLeft(props: {\r\n  children: React.ReactNode\r\n}): JSX.Element {\r\n  return <div className=\"dib w-50 pr3 v-top br\">{props.children}</div>\r\n}\r\n\r\nexport function SectionColumnRight(props: {\r\n  children: React.ReactNode\r\n}): JSX.Element {\r\n  return <div className=\"dib w-50 pl3 v-top\">{props.children}</div>\r\n}\r\n","// tracespace components library\r\nimport React from 'react'\r\n\r\nimport {SvgSource} from '../types'\r\n\r\nexport type SvgRenderProps = {\r\n  source: SvgSource\r\n  className?: string\r\n}\r\n\r\nexport const SvgRender = React.memo(_SvgRender)\r\n\r\nfunction _SvgRender(props: SvgRenderProps): JSX.Element | null {\r\n  const {source, className} = props\r\n\r\n  return source ? (\r\n    <div className={className} dangerouslySetInnerHTML={{__html: source}} />\r\n  ) : null\r\n}\r\n","// scale constants and utilities\r\nimport {DisplayState} from './types'\r\n\r\nexport const SCALE_INITIAL = 0.5\r\nexport const SCALE_LIMIT_FACTOR = 40\r\nexport const SCALE_STEP_COUNT = 16\r\n\r\nexport const SCALE_MIN = SCALE_INITIAL / SCALE_LIMIT_FACTOR\r\nexport const SCALE_MAX = SCALE_INITIAL * SCALE_LIMIT_FACTOR\r\n\r\nexport const INITIAL_STATE: DisplayState = {\r\n  x: 0,\r\n  y: 0,\r\n  step: SCALE_STEP_COUNT / 2,\r\n}\r\n\r\nconst SCALE_MIN_LOG = Math.log(SCALE_MIN)\r\nconst SCALE_MAX_LOG = Math.log(SCALE_MAX)\r\nconst SCALE_RANGE_LOG = SCALE_MAX_LOG - SCALE_MIN_LOG\r\nconst SCALE_STEP_LOG = SCALE_RANGE_LOG / SCALE_STEP_COUNT\r\n\r\nexport const SCALE_STEPS = new Array(SCALE_STEP_COUNT + 1)\r\n  .fill(0)\r\n  .map((_, i) => Math.pow(Math.E, SCALE_MIN_LOG + SCALE_STEP_LOG * i))\r\n\r\n// TODO(mc, 2018-11-20): find the notebook where I did this math and\r\n// put it in a README in this directory\r\nexport function zoom(\r\n  prevState: DisplayState,\r\n  delta: number,\r\n  centerX: number = 0.5,\r\n  centerY: number = 0.5\r\n): DisplayState {\r\n  const {x: prevX, y: prevY, step: prevStep} = prevState\r\n  const {scale: prevScale} = getScale(prevStep)\r\n  const {step: nextStep, scale: nextScale} = getScale(prevStep + delta)\r\n  const scaleRatio = nextScale / prevScale\r\n\r\n  return {\r\n    step: nextStep,\r\n    x: prevX + (scaleRatio - 1) * (prevX - centerX + 0.5),\r\n    y: prevY + (scaleRatio - 1) * (prevY - centerY + 0.5),\r\n  }\r\n}\r\n\r\nexport function pan(\r\n  prevState: DisplayState,\r\n  deltaX: number,\r\n  deltaY: number\r\n): DisplayState {\r\n  return {\r\n    ...prevState,\r\n    x: prevState.x + deltaX,\r\n    y: prevState.y + deltaY,\r\n  }\r\n}\r\n\r\nexport function getScale(step: number): {step: number; scale: number} {\r\n  step = Math.round(step)\r\n  step = Math.max(0, step)\r\n  step = Math.min(SCALE_STEP_COUNT, step)\r\n\r\n  return {step: step, scale: SCALE_STEPS[step]}\r\n}\r\n\r\n// take a logarithmic value and return it on a linear scale where:\r\n//   0.0 -> scale === SCALE_MIN\r\n//   0.5 -> scale === SCALE_INITIAL\r\n//   1.0 -> SCALE === SCALE_MAX\r\nexport function stepToScale(step: number): number {\r\n  const {step: actualStep} = getScale(step)\r\n\r\n  return actualStep / SCALE_STEP_COUNT\r\n}\r\n\r\n// reverse of stepToScale\r\nexport function scaleToStep(scale: number): number {\r\n  return getScale(scale * SCALE_STEP_COUNT).step\r\n}\r\n","import React, {useRef} from 'react'\r\n\r\nimport {useWindowListener} from '../hooks'\r\nimport {DisplayControllerProps, Point} from './types'\r\n\r\ntype Props = DisplayControllerProps & {\r\n  containerRef: React.RefObject<HTMLDivElement>\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst WHEEL_THRESHOLD = 20\r\nconst WHEEL_THRESHOLD_LINE = 0\r\n\r\nconst getEventCenter = (event: WheelEvent | React.MouseEvent): Point => ({\r\n  x: event.pageX / window.innerWidth,\r\n  y: event.pageY / window.innerHeight,\r\n})\r\n\r\nexport default function PanZoom(props: Props): JSX.Element {\r\n  const {pan, zoom, containerRef, children} = props\r\n  const panStart = useRef<{x: number; y: number} | null>(null)\r\n  const count = useRef(0)\r\n\r\n  useWindowListener('wheel', function handleWheel(event: WheelEvent): void {\r\n    const {deltaMode, deltaY} = event\r\n    const threshhold =\r\n      deltaMode === event.DOM_DELTA_LINE\r\n        ? WHEEL_THRESHOLD_LINE\r\n        : WHEEL_THRESHOLD\r\n\r\n    // increment or decrement count based on scroll direction\r\n    // remember that Math.sign(0) === 0\r\n    count.current += Math.sign(deltaY)\r\n\r\n    if (Math.abs(count.current) > threshhold) {\r\n      const direction = Math.sign(-count.current) || 0\r\n      const {x, y} = getEventCenter(event)\r\n\r\n      count.current = 0\r\n      zoom(direction, x, y)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className=\"absolute absolute--fill\"\r\n      onMouseDown={event => (panStart.current = getEventCenter(event))}\r\n      onMouseUp={() => (panStart.current = null)}\r\n      onMouseMove={event => {\r\n        if (panStart.current) {\r\n          const {x: prevX, y: prevY} = panStart.current\r\n          const {x, y} = getEventCenter(event)\r\n\r\n          pan(x - prevX, y - prevY)\r\n          panStart.current = {x, y}\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"absolute top-50 left-50 tf-center w-100\">{children}</div>\r\n    </div>\r\n  )\r\n}\r\n","// board display controls for zoom bar and board vs layer render\r\nimport React, {useState} from 'react'\r\n\r\nimport {Button, Icon} from '../ui'\r\nimport {stepToScale, scaleToStep} from './display'\r\nimport {DisplayControllerProps} from './types'\r\n\r\nconst ZOOM_RESET_TOOLTIP = 'Reset pan and zoom'\r\nconst ZOOM_OUT_TOOLTIP = 'Zoom out'\r\nconst ZOOM_IN_TOOTIP = 'Zoom in'\r\n\r\nconst CONTROLS_STYLE =\r\n  'absolute absolute--center-w-third bottom-1 z-1 w-third flex items-center f5'\r\nconst ZOOM_ICON_STYLE = 'flex-none'\r\nconst ZOOM_RESET_STYLE = 'absolute bottom-2 left-50 tf-center-x'\r\n\r\nconst ZOOM_BAR_CONTAINER_STYLE = 'relative w-100 h2 flex items-center grab'\r\nconst ZOOM_BAR_STYLE = 'dib pt2 bg-white shadow w-100'\r\nconst ZOOM_SLIDER_STYLE =\r\n  'absolute w1 h1 top-50 tf-center bg-brand o-70 left-animate'\r\n\r\nexport default function Controls(props: DisplayControllerProps): JSX.Element {\r\n  const [grabbing, setGrabbing] = useState(false)\r\n  const {step, reset, zoom, zoomIn, zoomOut} = props\r\n  const sliderLeft = `${stepToScale(step) * 100}%`\r\n\r\n  const handleGrabMove = (event: React.MouseEvent): void => {\r\n    const {left, width} = event.currentTarget.getBoundingClientRect()\r\n    const nextStep = scaleToStep((event.clientX - left) / width)\r\n    zoom(nextStep - step)\r\n  }\r\n\r\n  return (\r\n    <div className={CONTROLS_STYLE}>\r\n      <Button\r\n        className={ZOOM_RESET_STYLE}\r\n        onClick={reset}\r\n        title={ZOOM_RESET_TOOLTIP}\r\n      >\r\n        <Icon name=\"expand\" />\r\n      </Button>\r\n      <Button\r\n        className={ZOOM_ICON_STYLE}\r\n        onClick={zoomOut}\r\n        title={ZOOM_OUT_TOOLTIP}\r\n      >\r\n        <Icon name=\"search-minus\" />\r\n      </Button>\r\n      <span\r\n        className={ZOOM_BAR_CONTAINER_STYLE}\r\n        onMouseDown={event => {\r\n          setGrabbing(true)\r\n          handleGrabMove(event)\r\n        }}\r\n        onMouseUp={() => setGrabbing(false)}\r\n        onMouseMove={grabbing ? handleGrabMove : undefined}\r\n      >\r\n        <span className={ZOOM_BAR_STYLE} />\r\n        <span className={ZOOM_SLIDER_STYLE} style={{left: sliderLeft}} />\r\n      </span>\r\n      <Button\r\n        className={ZOOM_ICON_STYLE}\r\n        onClick={zoomIn}\r\n        title={ZOOM_IN_TOOTIP}\r\n      >\r\n        <Icon name=\"search-plus\" />\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport vb, {ViewBox} from 'viewbox'\r\n\r\nimport {LayerRender, LayerVisibilityMap} from '../types'\r\n\r\ntype Props = {\r\n  layers: Array<LayerRender>\r\n  layerVisibility: LayerVisibilityMap\r\n  viewBox: ViewBox\r\n  className?: string\r\n}\r\n\r\nexport function LayersRender(props: Props): JSX.Element {\r\n  const {layerVisibility, viewBox, className} = props\r\n  const layers = props.layers.filter(ly => ly.converter.layer.length > 0)\r\n\r\n  return (\r\n    <svg\r\n      className={cx(className, 'overflow-visible')}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth=\"0\"\r\n      fillRule=\"evenodd\"\r\n      viewBox={vb.asString(viewBox)}\r\n    >\r\n      {layers.map(ly => (\r\n        <defs\r\n          key={ly.id}\r\n          dangerouslySetInnerHTML={{__html: ly.converter.defs.join('')}}\r\n        />\r\n      ))}\r\n      <g transform={`translate(0,${viewBox[3] + 2 * viewBox[1]}) scale(1, -1)`}>\r\n        {layers.map(ly => {\r\n          const {converter, scale} = ly\r\n          const groupProps: React.SVGProps<SVGGElement> = {\r\n            id: ly.id,\r\n            dangerouslySetInnerHTML: {__html: converter.layer.join('')},\r\n          }\r\n\r\n          if (scale !== 1) groupProps.transform = `scale(${scale})`\r\n\r\n          return (\r\n            <g\r\n              key={ly.id}\r\n              fill={ly.color}\r\n              stroke={ly.color}\r\n              className={layerVisibility[ly.id] ? 'o-40' : 'o-0'}\r\n            >\r\n              <g {...groupProps} />\r\n            </g>\r\n          )\r\n        })}\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default React.memo(LayersRender)\r\n","import React, {useState, useRef, useEffect, useLayoutEffect} from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {useAppState} from '../state'\r\nimport {usePrevious} from '../hooks'\r\nimport {Fade, Slide, SvgRender} from '../ui'\r\nimport {INITIAL_STATE, pan, zoom, getScale} from './display'\r\nimport PanZoom from './PanZoom'\r\nimport Controls from './Controls'\r\nimport LayersRender from './LayersRender'\r\nimport {DisplayControllerProps} from './types'\r\n\r\nconst percent = (n: number): string => `${n * 100}%`\r\nconst getId = (b: {id: string} | null): string | null => (b ? b.id : null)\r\n\r\nexport default function BoardDisplay(): JSX.Element {\r\n  const {mode, board, loading, layerVisibility} = useAppState()\r\n  const [displayState, setDisplayState] = useState(INITIAL_STATE)\r\n  const prevBoard = usePrevious(board)\r\n  const containerRef = useRef<HTMLDivElement | null>(null)\r\n  const show = !loading && board !== null\r\n\r\n  const controllerProps: DisplayControllerProps = {\r\n    step: displayState.step,\r\n    reset: () => setDisplayState(INITIAL_STATE),\r\n    pan: (...args) => setDisplayState(pan(displayState, ...args)),\r\n    zoom: (...args) => setDisplayState(zoom(displayState, ...args)),\r\n    zoomIn: () => setDisplayState(zoom(displayState, 1)),\r\n    zoomOut: () => setDisplayState(zoom(displayState, -1)),\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (containerRef.current) {\r\n      const {x, y, step} = displayState\r\n      const {scale} = getScale(step)\r\n      const transform = `translate(${percent(x)},${percent(y)}) scale(${scale})`\r\n\r\n      containerRef.current.style.transform = transform\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (getId(board) !== getId(prevBoard)) controllerProps.reset()\r\n  }, [board, prevBoard])\r\n\r\n  return (\r\n    <>\r\n      <Fade in={show}>\r\n        <PanZoom {...controllerProps} containerRef={containerRef}>\r\n          {board && (\r\n            <>\r\n              <SvgRender\r\n                className={cx('w-100', {dn: mode !== 'top'})}\r\n                source={board.top}\r\n              />\r\n              <SvgRender\r\n                className={cx('w-100', {dn: mode !== 'bottom'})}\r\n                source={board.bottom}\r\n              />\r\n              <LayersRender\r\n                className={cx('w-100', {clip: mode !== 'layers'})}\r\n                viewBox={board.viewBox}\r\n                layers={board.layers}\r\n                layerVisibility={layerVisibility}\r\n              />\r\n            </>\r\n          )}\r\n        </PanZoom>\r\n      </Fade>\r\n      <Slide in={show} from=\"bottom\">\r\n        <Controls {...controllerProps} />\r\n      </Slide>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport contrast from 'contrast'\r\nimport {SIDE_TOP, SIDE_BOTTOM, SIDE_ALL, GerberSide} from 'whats-that-gerber'\r\n\r\nimport {LayerRender} from '../types'\r\nimport {useAppState, toggleVisibility, State} from '../state'\r\nimport {Button, Icon, IconProps} from '../ui'\r\n\r\ntype Props = {\r\n  className: string\r\n  id: LayerRender['id']\r\n  side: LayerRender['side']\r\n  type: LayerRender['type']\r\n  converter: LayerRender['converter']\r\n  color: LayerRender['color']\r\n}\r\n\r\nconst TOP_SIDES: Array<GerberSide> = [SIDE_TOP, SIDE_ALL]\r\nconst BOTTOM_SIDES: Array<GerberSide> = [SIDE_BOTTOM, SIDE_ALL]\r\nconst TOOLTIP = 'Toggle layer visibility (shift+click to toggle other layers)'\r\nconst BOARD_MODE_TOOLTIP = 'Cannot change visibility in board mode'\r\nconst NO_RENDER_TOOLTIP = 'Unable to render file'\r\n\r\nconst layerVisible = (\r\n  mode: State['mode'],\r\n  type: LayerRender['type'],\r\n  side: LayerRender['side'],\r\n  converter: LayerRender['converter'],\r\n  layerVisibility: boolean\r\n): boolean =>\r\n  type !== null &&\r\n  converter.layer.length !== 0 &&\r\n  ((mode === 'layers' && layerVisibility) ||\r\n    (mode === 'top' && TOP_SIDES.includes(side)) ||\r\n    (mode === 'bottom' && BOTTOM_SIDES.includes(side)))\r\n\r\nconst layerTooltip = (mode: State['mode'], disabled: boolean): string => {\r\n  if (mode !== 'layers') return BOARD_MODE_TOOLTIP\r\n  if (disabled) return NO_RENDER_TOOLTIP\r\n  return TOOLTIP\r\n}\r\n\r\nexport default function VisibilityButton(props: Props): JSX.Element {\r\n  const {mode, layerVisibility, dispatch} = useAppState()\r\n  const {id, side, type, converter, color, className} = props\r\n\r\n  const disabled =\r\n    type === null || converter.layer.length === 0 || mode !== 'layers'\r\n  const visible = layerVisible(mode, type, side, converter, layerVisibility[id])\r\n  const tooltip = layerTooltip(mode, disabled)\r\n  const iconProps: IconProps = {name: visible ? 'eye' : 'eye-slash'}\r\n\r\n  if (mode === 'layers' && visible) {\r\n    iconProps.style = {\r\n      backgroundColor: color,\r\n      color: contrast(color) === 'dark' ? 'white' : 'currentColor',\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className={className}\r\n      title={tooltip}\r\n      disabled={disabled}\r\n      onClick={event => dispatch(toggleVisibility(id, event.shiftKey))}\r\n    >\r\n      <Icon {...iconProps} />\r\n    </Button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {Fade} from '../ui'\r\nimport {LayerRender} from '../types'\r\nimport VisibilityButton from './VisibilityButton'\r\n\r\ntype Props = LayerRender & {showFilenames: boolean}\r\n\r\nconst TYPE_UNKNOWN = 'unknown'\r\n\r\nconst STYLE = 'flex items-center h2 mb2 pl3 br3 overflow-hidden bg-white shadow'\r\nconst TYPE_STYLE = 'f6 lh-title mv0 w-auto mr-auto'\r\nconst TYPE_STYLE_EXPANDED = 'flex-none'\r\nconst FILENAME_STYLE = 'f6 lh-title w-60 mv0 ph2 code truncate'\r\nconst VIS_BUTTON_STYLE = 'dib br0 f5 flex-none'\r\n\r\nexport default function FileItem(props: Props): JSX.Element {\r\n  const {id, side, type, converter, filename, color, showFilenames} = props\r\n\r\n  return (\r\n    <li className={STYLE}>\r\n      <p className={cx(TYPE_STYLE, {[TYPE_STYLE_EXPANDED]: showFilenames})}>\r\n        {type || TYPE_UNKNOWN}\r\n      </p>\r\n\r\n      <Fade in={showFilenames}>\r\n        <p className={FILENAME_STYLE}>{filename}</p>\r\n      </Fade>\r\n\r\n      <VisibilityButton\r\n        {...{id, side, type, converter, color}}\r\n        className={VIS_BUTTON_STYLE}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {LayerRender} from '../types'\r\nimport FileItem from './FileItem'\r\n\r\ntype Props = {\r\n  label: string\r\n  layers: Array<LayerRender>\r\n  showFilenames: boolean\r\n}\r\n\r\nconst HEADING_STYLE = 'mv2 pl3 lh-title f5 b'\r\nconst SUBLIST_STYLE = 'list pl0 mv0 near-black'\r\n\r\nexport default function SideList(props: Props): JSX.Element | null {\r\n  const {label, layers, showFilenames} = props\r\n  if (layers.length === 0) return null\r\n\r\n  return (\r\n    <li>\r\n      <h3 className={HEADING_STYLE}>{label}</h3>\r\n      <ul className={SUBLIST_STYLE}>\r\n        {layers.map(layer => (\r\n          <FileItem key={layer.id} {...layer} showFilenames={showFilenames} />\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport {SIDE_TOP, SIDE_BOTTOM, SIDE_INNER, SIDE_ALL} from 'whats-that-gerber'\r\n\r\nimport {stopPropagation} from '../events'\r\nimport {LayerRender} from '../types'\r\nimport {orderLayers} from '../layers'\r\nimport SideItem from './SideItem'\r\n\r\ntype Props = {\r\n  layers: Array<LayerRender>\r\n  showFilenames: boolean\r\n}\r\n\r\nconst SIDES = [\r\n  {label: 'top', side: SIDE_TOP},\r\n  {label: 'bottom', side: SIDE_BOTTOM},\r\n  {label: 'inner', side: SIDE_INNER},\r\n  {label: 'mechanical', side: SIDE_ALL},\r\n  {label: 'other', side: null},\r\n]\r\n\r\nconst STYLE = 'absolute left-0 top-5 bottom-5 overflow-y-hidden w-animate'\r\nconst STYLE_DEFAULT = 'w-sixth'\r\nconst STYLE_EXPANDED = 'w-third'\r\nconst LIST_WRAPPER_STYLE =\r\n  'w-100 mxh-100 overflow-y-auto ph3 tf-flip-x scrollbar-white'\r\nconst LIST_STYLE = 'list mt0 mb3 pl0 tf-flip-x'\r\n\r\nexport default function SideList(props: Props): JSX.Element {\r\n  const {layers, showFilenames} = props\r\n\r\n  return (\r\n    <div className={cx(STYLE, showFilenames ? STYLE_EXPANDED : STYLE_DEFAULT)}>\r\n      <div onWheel={stopPropagation} className={LIST_WRAPPER_STYLE}>\r\n        <ul className={LIST_STYLE}>\r\n          {SIDES.map(sideProps => (\r\n            <SideItem\r\n              key={sideProps.label}\r\n              label={sideProps.label}\r\n              layers={layers\r\n                .filter(ly => ly.side === sideProps.side)\r\n                .sort(orderLayers)}\r\n              showFilenames={showFilenames}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Button, Icon} from '../ui'\r\n\r\ntype Props = {\r\n  showFilenames: boolean\r\n  toggle: () => void\r\n}\r\n\r\nconst STYLE = 'absolute left-1 bottom-2 flex items-center f5'\r\nconst LABEL_STYLE = 'dib lh-title mv0 ml2 mr3'\r\n\r\nexport default function ShowFilenamesButton(props: Props): JSX.Element {\r\n  const {showFilenames, toggle} = props\r\n\r\n  return (\r\n    <Button className={STYLE} onClick={toggle}>\r\n      <Icon name={showFilenames ? 'chevron-left' : 'chevron-right'} />\r\n      <p className={LABEL_STYLE}>\r\n        {`${showFilenames ? 'Hide' : 'Show'} filenames`}\r\n      </p>\r\n    </Button>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport {useAppState} from '../state'\r\nimport {Fade, Slide} from '../ui'\r\nimport SideList from './SideList'\r\nimport ShowFilenamesButton from './ShowFilenamesButton'\r\n\r\nexport default function FileList(): JSX.Element {\r\n  const {loading, board} = useAppState()\r\n  const [showFilenames, setShowFilenames] = useState(false)\r\n\r\n  const layers = board ? board.layers : []\r\n  const show = !loading && board !== null\r\n\r\n  return (\r\n    <>\r\n      <Slide in={show} from=\"left\">\r\n        <SideList layers={layers} showFilenames={showFilenames} />\r\n      </Slide>\r\n      <Fade in={show}>\r\n        <ShowFilenamesButton\r\n          showFilenames={showFilenames}\r\n          toggle={() => setShowFilenames(!showFilenames)}\r\n        />\r\n      </Fade>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Button, Icon} from '../ui'\r\n\r\ntype Props = {\r\n  show: boolean\r\n  toggle: () => void\r\n}\r\n\r\nexport default function ShowButton(props: Props): JSX.Element {\r\n  const {show, toggle} = props\r\n\r\n  return (\r\n    <Button\r\n      className=\"absolute top-5 right-1 flex items-center f5\"\r\n      onClick={toggle}\r\n    >\r\n      <p className=\"dib lh-title mv0 ml3 mr2\">\r\n        {`${show ? 'Hide' : 'Show'} saved boards`}\r\n      </p>\r\n      <Icon name={show ? 'chevron-right' : 'chevron-left'} />\r\n    </Button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {BoardSummary} from '../types'\r\nimport {LazyThumbnail} from '../ui'\r\n\r\nexport type BoardItemProps = BoardSummary & {\r\n  onClick: (id: string) => void\r\n  selected: boolean\r\n}\r\n\r\n// TODO(mc, 2018-12-26): dedupe this logic\r\nconst DEFAULT_COLOR = 'rgba(00, 66, 00, 0.75)'\r\n\r\nexport default function BoardItem(props: BoardItemProps): JSX.Element {\r\n  const {id, name, selected, options, thumbnail} = props\r\n  const color = options.color.sm || DEFAULT_COLOR\r\n  const handleClick = (): unknown => !selected && props.onClick(id)\r\n\r\n  return (\r\n    <li\r\n      className={cx('dib w-50 pl3 pb3 fr', {pointer: !selected})}\r\n      onClick={handleClick}\r\n    >\r\n      <div className={cx('relative overflow-hidden w-100 h4 br3 shadow')}>\r\n        <div className=\"w-100 h-100 bg-white\">\r\n          <p\r\n            className={cx('f6 lh-title mv0 mh4 pt2 tc truncate', {\r\n              b: selected,\r\n            })}\r\n          >\r\n            {name}\r\n          </p>\r\n          <LazyThumbnail\r\n            url={thumbnail}\r\n            spinnerColor={color}\r\n            className=\"absolute top-2 bottom-1 left-1 right-1\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {stopPropagation} from '../events'\r\nimport {BoardSummary} from '../types'\r\nimport BoardItem from './BoardItem'\r\n\r\nconst STYLE = 'absolute right-0 top-7 bottom-5 w-third overflow-hidden'\r\nconst WRAPPER_STYLE = 'w-100 mxh-100 ph3 overflow-y-auto scrollbar-white'\r\nconst LIST_STYLE = 'list mt1 mb0 pl0 near-black'\r\n\r\ntype Props = {\r\n  selectedId: string | null\r\n  boards: Array<BoardSummary>\r\n  onItemClick: (id: string) => void\r\n}\r\n\r\nexport default function SavedBoardList(props: Props): JSX.Element {\r\n  const {selectedId, boards, onItemClick} = props\r\n\r\n  return (\r\n    <div className={STYLE}>\r\n      <div onWheel={stopPropagation} className={WRAPPER_STYLE}>\r\n        <ul className={LIST_STYLE}>\r\n          {boards.map(b => (\r\n            <BoardItem\r\n              {...b}\r\n              key={b.id}\r\n              selected={b.id === selectedId}\r\n              onClick={onItemClick}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nimport {useAppState, getBoard} from '../state'\r\nimport {usePrevious} from '../hooks'\r\nimport {Fade, Slide} from '../ui'\r\nimport ShowButton from './ShowButton'\r\nimport SavedBoardList from './SavedBoardList'\r\n\r\nexport default function BoardList(): JSX.Element {\r\n  const {mode, loading, board, savedBoards, dispatch} = useAppState()\r\n  const [show, setShow] = useState(mode === null)\r\n  const [selected, setSelected] = useState(board ? board.id : null)\r\n  const prevLoading = usePrevious(loading)\r\n\r\n  useEffect(() => {\r\n    if (prevLoading && !loading && board) {\r\n      setShow(false)\r\n      setSelected(board.id)\r\n    }\r\n  }, [prevLoading, loading, board])\r\n\r\n  const haveBoards = savedBoards.length > 0\r\n  const showList = haveBoards && show\r\n\r\n  return (\r\n    <>\r\n      <Fade in={haveBoards}>\r\n        <ShowButton show={showList} toggle={() => setShow(!show)} />\r\n      </Fade>\r\n      <Slide in={showList} from=\"right\">\r\n        <SavedBoardList\r\n          selectedId={selected}\r\n          boards={savedBoards}\r\n          onItemClick={(id: string) => {\r\n            dispatch(getBoard(id))\r\n            setSelected(id)\r\n          }}\r\n        />\r\n      </Slide>\r\n    </>\r\n  )\r\n}\r\n","const VERSION = process.env.PKG_VERSION || '0.0.0-version-error'\r\nconst REPOSITORY_URL = process.env.PKG_REPOSITORY_URL || ''\r\nconst AUTHOR_NAME = process.env.PKG_AUTHOR_NAME || ''\r\nconst AUTHOR_URL = process.env.PKG_AUTHOR_URL || '#'\r\n\r\nconst REPO_URL_MATCH = REPOSITORY_URL.match(/git\\+(https:\\/\\/.+).git/)\r\nconst REPO_URL = REPO_URL_MATCH ? REPO_URL_MATCH[1] : '#'\r\nconst CONTRIBUTORS_URL = `${REPO_URL}/graphs/contributors`\r\nconst PRIVACY_URL = `${REPO_URL}/blob/v${VERSION}/PRIVACY.md`\r\n\r\nexport {\r\n  VERSION,\r\n  AUTHOR_NAME,\r\n  AUTHOR_URL,\r\n  REPO_URL,\r\n  CONTRIBUTORS_URL,\r\n  PRIVACY_URL,\r\n}\r\n","import React from 'react'\r\n\r\nimport {VERSION} from '../pkg'\r\nimport {getAnalyticsUserId} from '../analytics'\r\nimport {select} from '../events'\r\nimport {useAppState, deleteAllBoards, updateAppPreferences} from '../state'\r\nimport {DeleteButton, Drawer, Checkbox, Label} from '../ui'\r\n\r\nconst TITLE = 'app settings'\r\nconst FOOTER = `tracespace v${VERSION}`\r\n\r\nconst DELETE_SAVED_COPY = 'delete all saved boards'\r\nconst USAGE_TRACKING_COPY = 'send usage data to tracespace'\r\nconst USER_ID_COPY = 'analytics user id'\r\n\r\nconst SETTINGS_ITEM_STYLE = 'mv2'\r\nconst LABEL_COPY_STYLE = 'mr-auto'\r\nconst USER_ID_LABEL_STYLE = 'flex-none mr2'\r\nconst USER_ID_INPUT_STYLE = 'w-100 bn bg-transparent'\r\nconst DELETE_BUTTON_STYLE = 'nr2'\r\nconst FOOTER_STYLE = 'mt3 mb1 f7 lh-copy'\r\n\r\ntype Props = {\r\n  open: boolean\r\n  close: () => void\r\n}\r\n\r\nexport default function SettingsDrawer(props: Props): JSX.Element {\r\n  const {appPreferences, dispatch} = useAppState()\r\n  const {open, close} = props\r\n\r\n  const handleTrackingChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    dispatch(updateAppPreferences({analyticsOptIn: event.target.checked}))\r\n  }\r\n\r\n  const handleDeleteAllClick = (): void => {\r\n    dispatch(deleteAllBoards())\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <Drawer title={TITLE} open={open} close={close}>\r\n      <Checkbox\r\n        checked={appPreferences.analyticsOptIn || false}\r\n        className={SETTINGS_ITEM_STYLE}\r\n        onChange={handleTrackingChange}\r\n      >\r\n        {USAGE_TRACKING_COPY}\r\n      </Checkbox>\r\n\r\n      <Label className={SETTINGS_ITEM_STYLE}>\r\n        <span className={LABEL_COPY_STYLE}>{DELETE_SAVED_COPY}</span>\r\n        <DeleteButton\r\n          className={DELETE_BUTTON_STYLE}\r\n          onClick={handleDeleteAllClick}\r\n        />\r\n      </Label>\r\n      <footer className={FOOTER_STYLE}>\r\n        <Label>\r\n          <span className={USER_ID_LABEL_STYLE}>{USER_ID_COPY}:</span>\r\n          <input\r\n            className={USER_ID_INPUT_STYLE}\r\n            type=\"text\"\r\n            value={getAnalyticsUserId() || 'N/A'}\r\n            onFocus={select}\r\n            readOnly\r\n          />\r\n        </Label>\r\n        {FOOTER}\r\n      </footer>\r\n    </Drawer>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Formik, Form, Field, FieldProps} from 'formik'\r\n\r\nimport {PRIVACY_URL} from '../pkg'\r\nimport {useTimeout} from '../hooks'\r\nimport {useAppState, updateAppPreferences} from '../state'\r\nimport {Fade, Checkbox, Button} from '../ui'\r\nimport {AppPreferences} from '../types'\r\n\r\nconst TITLE_COPY = 'welcome to tracespace view!'\r\nconst USAGE_TRACKING_COPY_1 =\r\n  'Please consider giving tracespace permission to collect anonymous usage data as you use this app.'\r\nconst USAGE_TRACKING_COPY_2 =\r\n  'The tracespace project is open-source and developed by volunteers. Usage data is an important tool to help us decide where to focus our energy and measure how well the app is performing.'\r\nconst MORE_INFORMATION_COPY =\r\n  'This data will never be shared or sold. For more information, a full list of the data collected, and instructions on how to request your data please see our'\r\nconst PRIVACY_POLICY_COPY = 'Privacy Policy'\r\nconst USAGE_TRACKING_LABEL_COPY = 'opt-in to anonymous usage tracking'\r\nconst BUTTON_COPY = 'done'\r\n\r\nconst TOAST_STYLE =\r\n  'fixed z-999 absolute--fill w-100 flex items-center justify-center bg-black-50'\r\nconst CONTAINER_STYLE = 'relative pv3 ph4 br3 near-black bg-white shadow'\r\nconst TITLE_STYLE = 'normal mt3 mb2 f4 lh-title tc'\r\nconst COPY_STYLE = 'lh-copy mv3 measure-wide'\r\nconst OPT_IN_STYLE = 'justify-center'\r\nconst LINK_STYLE = 'link blue dim'\r\nconst BUTTON_STYLE = 'mt3 ph4 pv2 f5 bg-near-black white tc fr'\r\n\r\nexport default function AnalyticsOptInToast(): JSX.Element {\r\n  const {appPreferences, dispatch} = useAppState()\r\n  const [show, setShow] = useState(false)\r\n\r\n  useTimeout(\r\n    () => setShow(true),\r\n    appPreferences.analyticsOptIn == null ? 1000 : null\r\n  )\r\n\r\n  return (\r\n    <Fade in={show && appPreferences.analyticsOptIn == null}>\r\n      <Formik\r\n        initialValues={{analyticsOptIn: true}}\r\n        onSubmit={values => dispatch(updateAppPreferences(values))}\r\n      >\r\n        {() => (\r\n          <Form className={TOAST_STYLE}>\r\n            <div className={CONTAINER_STYLE}>\r\n              <h3 className={TITLE_STYLE}>{TITLE_COPY}</h3>\r\n              <p className={COPY_STYLE}>{USAGE_TRACKING_COPY_1}</p>\r\n              <Field name=\"analyticsOptIn\">\r\n                {(fieldProps: FieldProps<AppPreferences>) => (\r\n                  <Checkbox className={OPT_IN_STYLE} {...fieldProps.field}>\r\n                    {USAGE_TRACKING_LABEL_COPY}\r\n                  </Checkbox>\r\n                )}\r\n              </Field>\r\n              <p className={COPY_STYLE}>{USAGE_TRACKING_COPY_2}</p>\r\n              <p className={COPY_STYLE}>\r\n                <span>{MORE_INFORMATION_COPY} </span>\r\n                <a\r\n                  className={LINK_STYLE}\r\n                  href={PRIVACY_URL}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\"\r\n                >\r\n                  {PRIVACY_POLICY_COPY}\r\n                </a>\r\n                <span>.</span>\r\n              </p>\r\n              <Button className={BUTTON_STYLE} type=\"submit\">\r\n                {BUTTON_COPY}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Fade>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport {VERSION} from '../pkg'\r\nimport {Button, Icon, getButtonStyle} from '../ui'\r\nimport SettingsDrawer from './SettingsDrawer'\r\nimport AnalyticsOptInModal from './AnalyticsOptInModal'\r\n\r\nconst HELP_TOOLTIP = 'Troubleshooting'\r\nconst HELP_HREF = `https://github.com/tracespace/tracespace/blob/v${VERSION}/apps/view/HELP.md`\r\n\r\nconst SETTINGS_TOOLTIP = 'App settings'\r\n\r\nexport type AppSettingsProps = {\r\n  buttonClassName: string\r\n}\r\n\r\nexport default function AppSettings(props: AppSettingsProps): JSX.Element {\r\n  const [open, setOpen] = useState(false)\r\n  const {buttonClassName} = props\r\n  const toggleOpen = (): void => setOpen(!open)\r\n\r\n  return (\r\n    <>\r\n      <a\r\n        href={HELP_HREF}\r\n        title={HELP_TOOLTIP}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        className={getButtonStyle({className: buttonClassName})}\r\n      >\r\n        <Icon name=\"question-circle\" />\r\n      </a>\r\n      <Button\r\n        onClick={toggleOpen}\r\n        title={SETTINGS_TOOLTIP}\r\n        className={buttonClassName}\r\n      >\r\n        <Icon name=\"sliders-h\" />\r\n      </Button>\r\n      <SettingsDrawer open={open} close={toggleOpen} />\r\n      <AnalyticsOptInModal />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {FieldProps} from './types'\r\n\r\nconst BASE_STYLE = 'f3 lh-title normal tc'\r\nconst STYLE = `${BASE_STYLE} mv0 mh2`\r\nconst INPUT_STYLE = `${BASE_STYLE} mb3 bb bt-0 br-0 bl-0 b--near-black`\r\n\r\nexport function BoardName(props: {children: React.ReactNode}): JSX.Element {\r\n  return <h2 className={STYLE}>{props.children}</h2>\r\n}\r\n\r\nexport function BoardNameInput(props: FieldProps): JSX.Element {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className={INPUT_STYLE}\r\n      autoComplete=\"off\"\r\n      data-lpignore=\"true\"\r\n      {...props.field}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {useAppState, setMode} from '../state'\r\nimport {Button} from '../ui'\r\n\r\nconst STYLE = 'mt2'\r\nconst BUTTON_STYLE = 'dib tc'\r\nconst TEXT_STYLE = 'db w3 mt2 mh2 mb1 bw2 bb'\r\nconst DESELECTED_STYLE = 'b--transparent'\r\nconst SELECTED_STYLE = 'b--brand'\r\n\r\nexport default function ModeSelect(): JSX.Element | null {\r\n  const {mode, dispatch} = useAppState()\r\n\r\n  if (!mode) return null\r\n\r\n  const buttons = [\r\n    {mode: 'layers', onClick: () => dispatch(setMode('layers'))},\r\n    {mode: 'top', onClick: () => dispatch(setMode('top'))},\r\n    {mode: 'bottom', onClick: () => dispatch(setMode('bottom'))},\r\n  ]\r\n\r\n  return (\r\n    <div className={STYLE}>\r\n      {buttons.map(b => (\r\n        <Button key={b.mode} className={BUTTON_STYLE} onClick={b.onClick}>\r\n          <span\r\n            className={cx(\r\n              TEXT_STYLE,\r\n              mode === b.mode ? SELECTED_STYLE : DESELECTED_STYLE\r\n            )}\r\n          >\r\n            {b.mode}\r\n          </span>\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import {\r\n  Optional,\r\n  BoardRender,\r\n  BoardUpdate,\r\n  BoardOptions,\r\n  LayerOptions,\r\n  LayerUpdatesMap,\r\n  Logger,\r\n} from '../types'\r\n\r\nimport {\r\n  Values,\r\n  FormBoardOptions,\r\n  FormLayerOptions,\r\n  FormLayerUpdatesMap,\r\n} from './types'\r\n\r\nexport const MASK_ALPHA = 'bf'\r\nexport const GAP_FILL_DEFAULT = 0.00011\r\n\r\nexport function valuesToBoardUpdate(values: Values, log: Logger): BoardUpdate {\r\n  let outlineGapFill =\r\n    values.options.outlineGapFill !== ''\r\n      ? Number(values.options.outlineGapFill)\r\n      : GAP_FILL_DEFAULT\r\n\r\n  if (!Number.isFinite(outlineGapFill)) outlineGapFill = GAP_FILL_DEFAULT\r\n\r\n  return {\r\n    name: values.name,\r\n    options: parseFormBoardOptions(values.options),\r\n    gerberOptions: parseFormLayerOptions(values.gerberOptions, log),\r\n    drillOptions: parseFormLayerOptions(values.drillOptions, log),\r\n    layers: parseFormLayerUpdates(values.layers),\r\n  }\r\n}\r\n\r\nexport function boardRenderToValues(board: BoardRender): Values {\r\n  return {\r\n    name: board.name,\r\n    options: boardOptionsToFormValue(board.options),\r\n    gerberOptions: layerOptionsToFormValue(board.gerberOptions),\r\n    drillOptions: layerOptionsToFormValue(board.drillOptions),\r\n    layers: board.layers.reduce<FormLayerUpdatesMap>(\r\n      (result, ly) => ({\r\n        ...result,\r\n        [ly.id]: {side: ly.side || '', type: ly.type || '', color: ly.color},\r\n      }),\r\n      {}\r\n    ),\r\n  }\r\n}\r\n\r\nfunction parseFormBoardOptions(formOptions: FormBoardOptions): BoardOptions {\r\n  let color = formOptions.color\r\n  let outlineGapFill =\r\n    formOptions.outlineGapFill !== ''\r\n      ? Number(formOptions.outlineGapFill)\r\n      : GAP_FILL_DEFAULT\r\n\r\n  if (!Number.isFinite(outlineGapFill)) outlineGapFill = GAP_FILL_DEFAULT\r\n\r\n  color = {...color, sm: `${color.sm.slice(0, 7)}${MASK_ALPHA}`}\r\n\r\n  return {...formOptions, color, outlineGapFill}\r\n}\r\n\r\nfunction parseFormLayerOptions(\r\n  formOptions: FormLayerOptions,\r\n  log: Logger\r\n): Optional<LayerOptions> {\r\n  const {coordinateFormat, zeroSuppression, units} = formOptions\r\n  const result: Optional<LayerOptions> = {}\r\n\r\n  if (Array.isArray(coordinateFormat)) {\r\n    const parsed = coordinateFormat.map(Number)\r\n    if (Number.isInteger(parsed[0]) && Number.isInteger(parsed[1])) {\r\n      result.coordinateFormat = [parsed[0], parsed[1]]\r\n    } else {\r\n      log.warn('Invalid coordinateFormat:', coordinateFormat)\r\n    }\r\n  }\r\n\r\n  if (zeroSuppression) result.zeroSuppression = zeroSuppression\r\n  if (units) result.units = units\r\n\r\n  return result\r\n}\r\n\r\nfunction parseFormLayerUpdates(\r\n  formUpdates: FormLayerUpdatesMap\r\n): LayerUpdatesMap {\r\n  return Object.keys(formUpdates).reduce<LayerUpdatesMap>((result, id) => {\r\n    const update = formUpdates[id]\r\n\r\n    return {\r\n      ...result,\r\n      [id]: {\r\n        type: update.type || null,\r\n        side: update.side || null,\r\n        color: update.color,\r\n      },\r\n    }\r\n  }, {})\r\n}\r\n\r\nfunction boardOptionsToFormValue(options: BoardOptions): FormBoardOptions {\r\n  return {\r\n    ...options,\r\n    color: {\r\n      ...options.color,\r\n      sm: options.color.sm.slice(0, 7),\r\n    },\r\n  }\r\n}\r\n\r\nfunction layerOptionsToFormValue(\r\n  options: Optional<LayerOptions>\r\n): FormLayerOptions {\r\n  return {\r\n    coordinateFormat: options.coordinateFormat || '',\r\n    zeroSuppression: options.zeroSuppression || '',\r\n    units: options.units || '',\r\n  }\r\n}\r\n","import React, {useState} from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {useTimeout} from '../hooks'\r\nimport {preventDefault, select} from '../events'\r\nimport {Label, Icon} from '../ui'\r\n\r\nexport type BoardUrlProps = {\r\n  url: string\r\n}\r\n\r\nconst SUCCESS_TIMEOUT = 1200\r\n\r\nconst PARAM = '?boardUrl='\r\n\r\nconst STYLE = 'justify-center f6 lh-solid mb3'\r\nconst TEXT_STYLE =\r\n  'flex items-center mv0 lh-copy near-black bg-animate near-black'\r\nconst ICON_STYLE = 'flex-none ml1 nr4 br2 c-animate bg-animate'\r\n\r\nexport default function BoardUrl(props: BoardUrlProps): JSX.Element {\r\n  const [selected, setSelected] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  useTimeout(() => setSuccess(false), success ? SUCCESS_TIMEOUT : null)\r\n\r\n  const {url} = props\r\n  const {origin, pathname} = window.location\r\n  const href = `${origin}${pathname}`\r\n  const copyValue = url ? `${href}${PARAM}${encodeURIComponent(url)}` : ''\r\n  const textStyle = cx(TEXT_STYLE, selected ? 'bg-light-blue' : 'bg-white')\r\n  const iconStyle = cx(\r\n    ICON_STYLE,\r\n    success ? 'white bg-brand' : 'near-black bg-white'\r\n  )\r\n\r\n  return (\r\n    <Label\r\n      className={STYLE}\r\n      onCopy={event => {\r\n        setSuccess(true)\r\n        event.currentTarget.focus()\r\n        event.clipboardData.setData('text/plain', copyValue)\r\n        preventDefault(event)\r\n      }}\r\n    >\r\n      <p className={textStyle}>\r\n        <span className=\"fw3\">\r\n          {href}\r\n          {PARAM}\r\n        </span>\r\n        <span>{url}</span>\r\n      </p>\r\n      <Icon name=\"copy\" className={iconStyle} />\r\n      <input\r\n        type=\"text\"\r\n        value={copyValue}\r\n        className=\"clip\"\r\n        onClick={event => {\r\n          select(event)\r\n          document.execCommand('copy')\r\n        }}\r\n        onFocus={event => {\r\n          select(event)\r\n          setSelected(true)\r\n        }}\r\n        onBlur={() => {\r\n          setSelected(false)\r\n          setSuccess(false)\r\n        }}\r\n        readOnly\r\n      />\r\n    </Label>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Button, DeleteButton, Icon} from '../ui'\r\n\r\nconst CANCEL_TOOLTIP = 'Cancel'\r\nconst SAVE_TOOLTIP = 'Save changes'\r\n\r\nconst STYLE = 'absolute top-1 right-1 nt2 nr2 f4'\r\nconst BUTTON_STYLE = 'dib pa1'\r\nconst DELETE_BUTTON_STYLE = `${BUTTON_STYLE} absolute top-1 left-1 nt2 nl2 f4`\r\n\r\ntype Props = {\r\n  delete: () => void\r\n}\r\n\r\nexport default function SettingsButtons(props: Props): JSX.Element {\r\n  return (\r\n    <>\r\n      <div className={STYLE}>\r\n        <Button type=\"reset\" className={BUTTON_STYLE} title={CANCEL_TOOLTIP}>\r\n          <Icon name=\"times\" />\r\n        </Button>\r\n        <Button type=\"submit\" className={BUTTON_STYLE} title={SAVE_TOOLTIP}>\r\n          <Icon name=\"check\" className=\"green\" />\r\n        </Button>\r\n      </div>\r\n      <DeleteButton onClick={props.delete} className={DELETE_BUTTON_STYLE} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport contrast from 'contrast'\r\nimport {Field} from 'formik'\r\n\r\nimport {BoardOptions} from '../types'\r\nimport {ColorPill, Icon, Label} from '../ui'\r\nimport {FieldProps} from './types'\r\nimport {MASK_ALPHA} from './values'\r\n\r\ntype BoardColor = BoardOptions['color']\r\n\r\ntype ColorPreset = {\r\n  title: string\r\n  color: BoardColor\r\n}\r\n\r\ntype ColorId = keyof BoardColor\r\n\r\nconst DEFAULT_COLOR_PRESET: BoardColor = {\r\n  cf: '#cc9933',\r\n  sm: '#004200',\r\n  ss: '#ffffff',\r\n}\r\n\r\nconst OSH_PARK_COLOR_PRESET: BoardColor = {\r\n  cf: '#cc9933',\r\n  sm: '#4b0082',\r\n  ss: '#ffffff',\r\n}\r\n\r\nconst SPARKFUN_COLOR_PRESET: BoardColor = {\r\n  cf: '#f5f5f5',\r\n  sm: '#cc0000',\r\n  ss: '#ffffff',\r\n}\r\n\r\nconst COLOR_PRESETS: Array<ColorPreset> = [\r\n  {title: 'default', color: DEFAULT_COLOR_PRESET},\r\n  {title: 'OSH Park', color: OSH_PARK_COLOR_PRESET},\r\n  {title: 'SparkFun', color: SPARKFUN_COLOR_PRESET},\r\n]\r\n\r\nconst COLOR_IDS: Array<ColorId> = ['sm', 'ss', 'cf']\r\nconst COLOR_NAMES = {sm: 'soldermask', ss: 'silkscreen', cf: 'copper finish'}\r\n\r\n// TOCO(mc, 2019-03-01): move opacity entirely to pcb-stackup-core\r\nconst stripAlpha = (c: string): string => c.slice(0, 7)\r\nconst colorsMatch = (a: string, b: string): boolean =>\r\n  stripAlpha(a) === stripAlpha(b)\r\n\r\nfunction ColorInput(props: FieldProps & {colorId: ColorId}): JSX.Element {\r\n  const {colorId, field, form} = props\r\n  const value = stripAlpha(`${field.value}`)\r\n\r\n  return (\r\n    <Label className=\"h2\">\r\n      <span className=\"mr-auto\">{COLOR_NAMES[colorId]}</span>\r\n      <input\r\n        {...field}\r\n        value={value}\r\n        type=\"color\"\r\n        className=\"clip\"\r\n        onChange={event => {\r\n          let value = stripAlpha(event.target.value)\r\n          if (colorId === 'sm') value += MASK_ALPHA\r\n          form.setFieldValue(field.name, value)\r\n        }}\r\n      />\r\n      <ColorPill color={value} />\r\n    </Label>\r\n  )\r\n}\r\n\r\nexport function ColorPresetsField(props: {fieldName: string}): JSX.Element {\r\n  return <Field name={props.fieldName} component={ColorPresetInput} />\r\n}\r\n\r\nexport function ColorFields(props: {fieldName: string}): JSX.Element {\r\n  return (\r\n    <>\r\n      {COLOR_IDS.map(id => (\r\n        <Field\r\n          key={id}\r\n          name={`${props.fieldName}.${id}`}\r\n          component={ColorInput}\r\n          colorId={id}\r\n        />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ColorPresetInput(props: FieldProps): JSX.Element {\r\n  return (\r\n    <>\r\n      {COLOR_PRESETS.map(preset => (\r\n        <ColorPresetOption key={preset.title} {...preset} {...props} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ColorPresetOption(props: FieldProps & ColorPreset): JSX.Element {\r\n  const {title, color, field, form} = props\r\n  const value = {...color, sm: `${stripAlpha(color.sm)}${MASK_ALPHA}`}\r\n  const checked = COLOR_IDS.every(i => colorsMatch(color[i], field.value[i]))\r\n  const iconName = checked ? 'dot-circle' : 'circle'\r\n\r\n  return (\r\n    <Label className=\"h2\">\r\n      <input\r\n        type=\"radio\"\r\n        className=\"clip\"\r\n        checked={checked}\r\n        onChange={() => form.setFieldValue(field.name, value)}\r\n      />\r\n      <Icon name={iconName} className=\"flex-none nl2\" />\r\n      <span className=\"lh-title mr-auto\">{title}</span>\r\n      <BoardColorSwatch boardColor={color} />\r\n    </Label>\r\n  )\r\n}\r\n\r\nfunction BoardColorSwatch(props: {boardColor: BoardColor}): JSX.Element {\r\n  const {boardColor} = props\r\n\r\n  return (\r\n    <div className=\"flex-none tf-skew-15\">\r\n      {COLOR_IDS.map((id, index, collection) => {\r\n        const color = boardColor[id]\r\n        const previous = boardColor[collection[index - 1]] || null\r\n        const needsBorder = contrast(color) === 'light'\r\n        const prevHasBorder = previous && contrast(previous) === 'light'\r\n        const style = cx('border-box dib w1 h1 v-mid', {\r\n          'bt bb br b--near-black': needsBorder,\r\n          bl: needsBorder && !prevHasBorder,\r\n        })\r\n\r\n        return (\r\n          <span key={id} className={style} style={{backgroundColor: color}} />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport {Field} from 'formik'\r\n\r\nimport {Checkbox, HiddenInput, Label} from '../ui'\r\nimport {CoordinateFormat, ZeroSuppression, Units} from '../types'\r\nimport {FieldProps} from './types'\r\nimport {GAP_FILL_DEFAULT} from './values'\r\n\r\nconst USE_OUTLINE_LABEL = 'use outline layer for board shape'\r\nconst GAP_FILL_LABEL = 'gap fill limit'\r\nconst GAP_FILL_UNITS = 'mm'\r\nconst OVERRIDE_LABEL = 'override'\r\nconst COORD_FORMAT_LABEL = 'integer/decimal coordinate format'\r\nconst ZERO_SUPRESSION_LABEL = 'zero suppression'\r\nconst UNITS_LABEL = 'units'\r\n\r\nconst NUMBER_INPUT_STYLE =\r\n  'bb bt-0 br-0 bl-0 bw1 tc near-black b--near-black bg-transparent code f6'\r\n\r\nexport function UseOutlineInput(props: FieldProps): JSX.Element {\r\n  return (\r\n    <Checkbox className=\"inline-flex v-mid\" {...props.field}>\r\n      {USE_OUTLINE_LABEL}\r\n    </Checkbox>\r\n  )\r\n}\r\n\r\nexport function GapFillInput(props: FieldProps): JSX.Element {\r\n  const {field, form} = props\r\n  const value = field.value !== '' ? field.value : GAP_FILL_DEFAULT\r\n  const disabled = !form.values.options.useOutline\r\n  const className = cx('inline-flex items-center pointer h2 v-mid fr', {\r\n    'o-40': disabled,\r\n  })\r\n\r\n  return (\r\n    <label className={className}>\r\n      {GAP_FILL_LABEL}\r\n      <input\r\n        {...field}\r\n        type=\"text\"\r\n        className={cx(NUMBER_INPUT_STYLE, 'w3 ml3 mr2')}\r\n        disabled={disabled}\r\n        value={value}\r\n      />\r\n      {GAP_FILL_UNITS}\r\n    </label>\r\n  )\r\n}\r\n\r\ntype RenderSettingProps<Value> = {\r\n  fieldName: string\r\n  renderName: string\r\n  overridden: boolean\r\n  defaultValue: Value | null | undefined\r\n}\r\n\r\nexport function CoordFormatFields(\r\n  props: RenderSettingProps<CoordinateFormat>\r\n): JSX.Element {\r\n  const {fieldName, renderName, overridden, defaultValue} = props\r\n\r\n  return (\r\n    <OverridableField\r\n      fieldName={fieldName}\r\n      label={`${OVERRIDE_LABEL} ${renderName} ${COORD_FORMAT_LABEL}`}\r\n      overridden={overridden}\r\n      defaultValue={defaultValue}\r\n    >\r\n      <Field\r\n        name={`${fieldName}[0]`}\r\n        placeholder={defaultValue ? defaultValue[0] : ''}\r\n        type=\"text\"\r\n        className={cx(NUMBER_INPUT_STYLE, 'w2')}\r\n      />\r\n      <span className=\"dib mh2\">.</span>\r\n      <Field\r\n        name={`${fieldName}[1]`}\r\n        placeholder={defaultValue ? defaultValue[1] : ''}\r\n        type=\"text\"\r\n        className={cx(NUMBER_INPUT_STYLE, 'w2')}\r\n      />\r\n    </OverridableField>\r\n  )\r\n}\r\n\r\ntype RadioGroupProps = FieldProps & {\r\n  options: Array<{value: string; label: string}>\r\n  defaultValue: unknown\r\n}\r\n\r\nfunction RadioGroup(props: RadioGroupProps): JSX.Element {\r\n  const {field, options, defaultValue} = props\r\n\r\n  return (\r\n    <>\r\n      {options.map(opt => {\r\n        const value = field.value || defaultValue\r\n        const checked = value === opt.value\r\n\r\n        return (\r\n          <Label key={opt.value}>\r\n            <HiddenInput\r\n              {...field}\r\n              type=\"radio\"\r\n              key={opt.value}\r\n              value={opt.value}\r\n              checked={checked}\r\n            />\r\n            <span className={cx('dib ph2 ml2', {'bb bw1 b--brand': checked})}>\r\n              {opt.label}\r\n            </span>\r\n          </Label>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport function ZeroSuppressionFields(\r\n  props: RenderSettingProps<ZeroSuppression>\r\n): JSX.Element {\r\n  const {fieldName, renderName, overridden, defaultValue} = props\r\n\r\n  return (\r\n    <OverridableField\r\n      fieldName={fieldName}\r\n      label={`${OVERRIDE_LABEL} ${renderName} ${ZERO_SUPRESSION_LABEL}`}\r\n      overridden={overridden}\r\n      defaultValue={defaultValue}\r\n    >\r\n      <Field\r\n        name={fieldName}\r\n        component={RadioGroup}\r\n        defaultValue={defaultValue}\r\n        options={[\r\n          {value: 'L', label: 'leading'},\r\n          {value: 'T', label: 'trailing'},\r\n        ]}\r\n      />\r\n    </OverridableField>\r\n  )\r\n}\r\n\r\nexport function UnitsFields(props: RenderSettingProps<Units>): JSX.Element {\r\n  const {fieldName, renderName, overridden, defaultValue} = props\r\n\r\n  return (\r\n    <OverridableField\r\n      fieldName={fieldName}\r\n      label={`${OVERRIDE_LABEL} ${renderName} ${UNITS_LABEL}`}\r\n      overridden={overridden}\r\n      defaultValue={defaultValue}\r\n    >\r\n      <Field\r\n        name={fieldName}\r\n        component={RadioGroup}\r\n        defaultValue={defaultValue}\r\n        options={[\r\n          {value: 'in', label: 'inches'},\r\n          {value: 'mm', label: 'millimeters'},\r\n        ]}\r\n      />\r\n    </OverridableField>\r\n  )\r\n}\r\n\r\ntype OverrideCheckboxProps = FieldProps & {\r\n  label: string\r\n  defaultValue: unknown\r\n}\r\n\r\nfunction OverrideCheckbox(props: OverrideCheckboxProps): JSX.Element {\r\n  const {form, defaultValue, label} = props\r\n  const field = {\r\n    ...props.field,\r\n    checked: !!props.field.value,\r\n    onBlur: () => {},\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n      const value = event.target.checked ? defaultValue : ''\r\n      form.setFieldValue(props.field.name, value)\r\n    },\r\n  }\r\n\r\n  return <Checkbox {...field}>{label}</Checkbox>\r\n}\r\n\r\ntype OverridableFieldProps = {\r\n  fieldName: string\r\n  label: string\r\n  overridden: boolean\r\n  defaultValue: unknown\r\n  children: React.ReactNode\r\n}\r\n\r\nfunction OverridableField(props: OverridableFieldProps): JSX.Element {\r\n  const {fieldName, label, overridden, defaultValue, children} = props\r\n\r\n  return (\r\n    <div className=\"flex items-center h2 mt1\">\r\n      <Field\r\n        name={fieldName}\r\n        component={OverrideCheckbox}\r\n        defaultValue={defaultValue}\r\n        label={label}\r\n        className=\"flex\"\r\n      />\r\n      <div className={cx('flex flex-none ml-auto', {'o-40': !overridden})}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport {ColorPill, HiddenInput, Label} from '../ui'\r\nimport {SIDE_ALL, ALL_TYPES, typeToValidSides} from '../layers'\r\nimport {GerberType} from '../types'\r\nimport {FieldProps} from './types'\r\n\r\ntype LayerListProps = {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function LayerList(props: LayerListProps): JSX.Element {\r\n  return <ul className=\"list pl0 mv0\">{props.children}</ul>\r\n}\r\n\r\ntype LayerItemProps = {\r\n  filename: string\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function LayerItem(props: LayerItemProps): JSX.Element {\r\n  const {filename} = props\r\n\r\n  return (\r\n    <li className=\"flex items-center mb3\">\r\n      <p className=\"code f5 lh-title mv0 mr-auto\">{filename}</p>\r\n      {props.children}\r\n    </li>\r\n  )\r\n}\r\n\r\ntype LayerFieldProps = FieldProps & {layerId: string}\r\n\r\nexport function LayerTypeSelect(props: LayerFieldProps): JSX.Element {\r\n  const {layerId, form, field} = props\r\n\r\n  return (\r\n    <select\r\n      {...field}\r\n      className=\"dib flex-none f5 w4 mr2\"\r\n      onChange={event => {\r\n        const type = (event.target.value as GerberType) || ''\r\n        const layer = form.values.layers[layerId]\r\n        const validSides = typeToValidSides(type)\r\n        const side = validSides.includes(layer.side)\r\n          ? layer.side\r\n          : validSides[0] || ''\r\n\r\n        form.setValues({\r\n          ...form.values,\r\n          layers: {...form.values.layers, [layerId]: {...layer, type, side}},\r\n        })\r\n      }}\r\n    >\r\n      {ALL_TYPES.map(t => (\r\n        <option key={t} value={t}>\r\n          {t}\r\n        </option>\r\n      ))}\r\n      <option value=\"\">n/a</option>\r\n    </select>\r\n  )\r\n}\r\n\r\nexport function LayerSideSelect(props: LayerFieldProps): JSX.Element {\r\n  const {layerId, field, form} = props\r\n  const {type} = form.values.layers[layerId]\r\n  const options: Array<string> = typeToValidSides(type)\r\n  const disabled = options.length < 2\r\n\r\n  if (options.length < 1) options.push('')\r\n\r\n  return (\r\n    <select className=\"dib flex-none f5 w4 mr2\" disabled={disabled} {...field}>\r\n      {options.map(opt => (\r\n        <option key={opt} value={opt}>\r\n          {opt === SIDE_ALL || opt === '' ? 'n/a' : opt}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport function LayerColorInput(props: LayerFieldProps): JSX.Element {\r\n  const {layerId, field, form} = props\r\n  const {type} = form.values.layers[layerId]\r\n  const disabled = type === ''\r\n\r\n  return (\r\n    <Label className=\"h2\" disabled={disabled}>\r\n      <HiddenInput type=\"color\" disabled={disabled} {...field} />\r\n      <ColorPill color={field.value} className={cx({'o-40': disabled})} />\r\n    </Label>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Formik, Form, Field} from 'formik'\r\n\r\nimport log from '../logger'\r\nimport {getDefaultLayerOptions, orderLayers} from '../layers'\r\nimport {useAppState, updateBoard, deleteBoard} from '../state'\r\nimport {BoardRender} from '../types'\r\nimport {TitledSection, SectionColumnLeft, SectionColumnRight} from '../ui'\r\nimport {Values} from './types'\r\nimport {boardRenderToValues, valuesToBoardUpdate} from './values'\r\n\r\nimport BoardUrl from './BoardUrl'\r\nimport SettingsButtons from './SettingsButtons'\r\nimport {BoardNameInput} from './name'\r\nimport {ColorPresetsField, ColorFields} from './color'\r\nimport {\r\n  UseOutlineInput,\r\n  GapFillInput,\r\n  CoordFormatFields,\r\n  ZeroSuppressionFields,\r\n  UnitsFields,\r\n} from './render'\r\nimport {\r\n  LayerList,\r\n  LayerItem,\r\n  LayerTypeSelect,\r\n  LayerSideSelect,\r\n  LayerColorInput,\r\n} from './layers'\r\n\r\ntype SettingsFormProps = {\r\n  className: string\r\n  board: BoardRender\r\n  close: () => void\r\n}\r\n\r\nexport default function SettingsForm(props: SettingsFormProps): JSX.Element {\r\n  const {dispatch} = useAppState()\r\n  const {board, close, className} = props\r\n  const {id, sourceUrl, layers} = board\r\n  const defaultGerberOptions = getDefaultLayerOptions(layers, 'gerber')\r\n  const defaultDrillOptions = getDefaultLayerOptions(layers, 'drill')\r\n\r\n  const handleSubmit = (values: Values): void => {\r\n    dispatch(updateBoard(id, valuesToBoardUpdate(values, log)))\r\n    close()\r\n  }\r\n\r\n  const handleDelete = (): void => {\r\n    dispatch(deleteBoard(id))\r\n    close()\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={boardRenderToValues(board)}\r\n      onSubmit={handleSubmit}\r\n      onReset={close}\r\n    >\r\n      {formProps => (\r\n        <Form className={className}>\r\n          <SettingsButtons delete={handleDelete} />\r\n          <Field name=\"name\" component={BoardNameInput} />\r\n          {sourceUrl && <BoardUrl url={sourceUrl} />}\r\n          <TitledSection title=\"colors\">\r\n            <SectionColumnLeft>\r\n              <ColorPresetsField fieldName=\"options.color\" />\r\n            </SectionColumnLeft>\r\n            <SectionColumnRight>\r\n              <ColorFields fieldName=\"options.color\" />\r\n            </SectionColumnRight>\r\n          </TitledSection>\r\n          <TitledSection title=\"render options\">\r\n            <div>\r\n              <Field name=\"options.useOutline\" component={UseOutlineInput} />\r\n              <Field name=\"options.outlineGapFill\" component={GapFillInput} />\r\n            </div>\r\n            <CoordFormatFields\r\n              fieldName=\"gerberOptions.coordinateFormat\"\r\n              renderName=\"gerber\"\r\n              defaultValue={defaultGerberOptions.coordinateFormat}\r\n              overridden={!!formProps.values.gerberOptions.coordinateFormat}\r\n            />\r\n            <ZeroSuppressionFields\r\n              fieldName=\"gerberOptions.zeroSuppression\"\r\n              renderName=\"gerber\"\r\n              defaultValue={defaultGerberOptions.zeroSuppression}\r\n              overridden={!!formProps.values.gerberOptions.zeroSuppression}\r\n            />\r\n            <UnitsFields\r\n              fieldName=\"gerberOptions.units\"\r\n              renderName=\"gerber\"\r\n              defaultValue={defaultGerberOptions.units}\r\n              overridden={!!formProps.values.gerberOptions.units}\r\n            />\r\n            <CoordFormatFields\r\n              fieldName=\"drillOptions.coordinateFormat\"\r\n              renderName=\"drill\"\r\n              defaultValue={defaultDrillOptions.coordinateFormat}\r\n              overridden={!!formProps.values.drillOptions.coordinateFormat}\r\n            />\r\n            <ZeroSuppressionFields\r\n              fieldName=\"drillOptions.zeroSuppression\"\r\n              renderName=\"drill\"\r\n              defaultValue={defaultDrillOptions.zeroSuppression}\r\n              overridden={!!formProps.values.drillOptions.zeroSuppression}\r\n            />\r\n            <UnitsFields\r\n              fieldName=\"drillOptions.units\"\r\n              renderName=\"drill\"\r\n              defaultValue={defaultDrillOptions.units}\r\n              overridden={!!formProps.values.drillOptions.units}\r\n            />\r\n          </TitledSection>\r\n          <TitledSection title=\"layers\">\r\n            <LayerList>\r\n              {layers\r\n                .slice(0)\r\n                .sort(orderLayers)\r\n                .map(ly => (\r\n                  <LayerItem key={ly.id} filename={ly.filename}>\r\n                    <Field\r\n                      name={`layers.${ly.id}.type`}\r\n                      component={LayerTypeSelect}\r\n                      layerId={ly.id}\r\n                    />\r\n                    <Field\r\n                      name={`layers.${ly.id}.side`}\r\n                      component={LayerSideSelect}\r\n                      layerId={ly.id}\r\n                    />\r\n                    <Field\r\n                      name={`layers.${ly.id}.color`}\r\n                      component={LayerColorInput}\r\n                      layerId={ly.id}\r\n                    />\r\n                  </LayerItem>\r\n                ))}\r\n            </LayerList>\r\n          </TitledSection>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n","import React, {useState, useRef, useEffect} from 'react'\r\n\r\nimport {stopPropagation} from '../events'\r\nimport {BoardRender} from '../types'\r\nimport {Button, Icon, Fade} from '../ui'\r\nimport {BoardName} from './name'\r\nimport ModeSelect from './ModeSelect'\r\nimport SettingsForm from './SettingsForm'\r\n\r\nexport type BoardSettingsProps = {\r\n  board: BoardRender\r\n  updating: boolean\r\n}\r\n\r\nconst OPEN_BUTTON_TOOLTIP = 'Board settings'\r\n\r\nconst STYLE = 'dib ph3 tc v-top w-third'\r\nconst NAME_STYLE = 'flex items-center justify-center'\r\nconst OPEN_BUTTON_STYLE = 'nr4'\r\nconst MODAL_STYLE = 'fixed top-1 left-0 right-0 bottom-1 z-1 nt2'\r\nconst MODAL_CONTENTS_STYLE =\r\n  'relative w-50 mxh-100 center pt2 ph4 br3 near-black bg-white shadow overflow-y-auto scrollbar-near-black'\r\n\r\nconst FORM_STYLE = 'dib w-100'\r\n\r\nexport default function BoardSettings(props: BoardSettingsProps): JSX.Element {\r\n  const [open, setOpen] = useState(false)\r\n  const modalContentsRef = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    const $modalContents = modalContentsRef.current\r\n\r\n    if ($modalContents) {\r\n      const {width} = $modalContents.getBoundingClientRect()\r\n      const clientWidth = $modalContents.clientWidth\r\n      const shift = (width - clientWidth) / 2\r\n\r\n      // shift modal contents by scrollbar width if present\r\n      $modalContents.style.transform = `translateX(${shift}px)`\r\n    }\r\n  })\r\n\r\n  const {board, updating} = props\r\n  const toggleOpen = (): void => setOpen(!open)\r\n\r\n  return (\r\n    <div className={STYLE}>\r\n      <div className={NAME_STYLE}>\r\n        <BoardName>{board.name}</BoardName>\r\n        <Button\r\n          onClick={toggleOpen}\r\n          disabled={updating}\r\n          className={OPEN_BUTTON_STYLE}\r\n          title={OPEN_BUTTON_TOOLTIP}\r\n        >\r\n          <Icon\r\n            name={updating ? 'spinner' : 'cog'}\r\n            faProps={{pulse: updating}}\r\n          />\r\n        </Button>\r\n      </div>\r\n      <ModeSelect />\r\n      <Fade in={open}>\r\n        <div className={MODAL_STYLE} onWheel={stopPropagation}>\r\n          <div className={MODAL_CONTENTS_STYLE} ref={modalContentsRef}>\r\n            <SettingsForm\r\n              className={FORM_STYLE}\r\n              board={board}\r\n              close={toggleOpen}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Formik, Form, Field} from 'formik'\r\nimport {Button, Drawer, HiddenInput, Icon, Label, getButtonStyle} from '../ui'\r\nimport {FileEvent} from '../types'\r\n\r\nconst TITLE = 'new board'\r\n\r\nconst UPLOAD_FILES_LABEL = 'upload files from your computer'\r\nconst ENTER_URL_LABEL = 'enter the URL of a ZIP archive'\r\nconst ENTER_URL_PLACEHOLDER = 'https://tracespace.io/view/arduino-uno.zip'\r\nconst FOOTER = 'you can also drag-and-drop files into the app at any time'\r\n\r\nconst UPLOAD_FILES_LABEL_STYLE = 'mr-auto'\r\nconst ICON_STYLE = 'flex-none ml2 brand f4'\r\nconst SEPARATOR_STYLE = 'mv2 fw3 f6 i tc'\r\nconst ENTER_URL_LABEL_STYLE = 'mt0 mb2 pt2'\r\nconst URL_INPUT_STYLE = 'w-100 bb bt-0 br-0 bl-0 b--near-black code f7'\r\nconst URL_INPUT_WRAPPER_STYLE = 'flex items-bottom h2'\r\nconst FOOTER_STYLE = 'mt4 mb1 f7 lh-copy'\r\n\r\nexport type OpenFileDrawerProps = {\r\n  open: boolean\r\n  handleFiles: (event: FileEvent) => void\r\n  handleUrl: (url: string) => void\r\n  close: () => void\r\n}\r\n\r\nfunction OpenFileDrawer(props: OpenFileDrawerProps): JSX.Element {\r\n  const {open, handleFiles, handleUrl, close} = props\r\n\r\n  return (\r\n    <Drawer title={TITLE} open={open} close={close}>\r\n      <Label>\r\n        <span className={UPLOAD_FILES_LABEL_STYLE}>{UPLOAD_FILES_LABEL}</span>\r\n        <HiddenInput type=\"file\" onChange={handleFiles} multiple />\r\n        <Icon\r\n          name=\"file-upload\"\r\n          className={getButtonStyle({className: ICON_STYLE})}\r\n        />\r\n      </Label>\r\n      <p className={SEPARATOR_STYLE}>or</p>\r\n      <Formik\r\n        initialValues={{url: ''}}\r\n        onSubmit={values => handleUrl(values.url)}\r\n      >\r\n        {formikProps => (\r\n          <Form>\r\n            <p className={ENTER_URL_LABEL_STYLE}>{ENTER_URL_LABEL}</p>\r\n            <span className={URL_INPUT_WRAPPER_STYLE}>\r\n              <Field\r\n                name=\"url\"\r\n                type=\"text\"\r\n                className={URL_INPUT_STYLE}\r\n                placeholder={ENTER_URL_PLACEHOLDER}\r\n              />\r\n              <Button type=\"submit\" disabled={!formikProps.values.url}>\r\n                <Icon name=\"check\" className={ICON_STYLE} />\r\n              </Button>\r\n            </span>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <footer className={FOOTER_STYLE}>{FOOTER}</footer>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default OpenFileDrawer\r\n","import React, {useState} from 'react'\r\n\r\nimport {useAppState, getBoardPackage} from '../state'\r\nimport {Button, Icon} from '../ui'\r\nimport {FileEvent} from '../types'\r\nimport OpenFileDrawer from './OpenFileDrawer'\r\n\r\nconst DOWNLOAD_TOOLTIP = 'Download SVG renders'\r\nconst UPLOAD_TOOLTIP = 'Upload Gerber/drill files'\r\n\r\nexport type FileControlsProps = {\r\n  buttonClassName: string\r\n  handleFiles: (event: FileEvent) => void\r\n  handleUrl: (url: string) => void\r\n}\r\n\r\nexport default function FileControls(props: FileControlsProps): JSX.Element {\r\n  const {board, loading, downloading, dispatch} = useAppState()\r\n  const [open, setOpen] = useState(false)\r\n  const {buttonClassName} = props\r\n\r\n  const toggleUploadOpen = (): void => setOpen(!open)\r\n\r\n  const handleFiles = (event: FileEvent): void => {\r\n    setOpen(false)\r\n    props.handleFiles(event)\r\n  }\r\n\r\n  const handleUrl = (url: string): void => {\r\n    setOpen(false)\r\n    props.handleUrl(url)\r\n  }\r\n\r\n  const downloadBoard = (): void => {\r\n    if (board) {\r\n      dispatch(getBoardPackage(board.id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className={buttonClassName}\r\n        onClick={toggleUploadOpen}\r\n        disabled={loading}\r\n        title={UPLOAD_TOOLTIP}\r\n      >\r\n        <Icon name=\"plus\" />\r\n      </Button>\r\n      <Button\r\n        className={buttonClassName}\r\n        onClick={downloadBoard}\r\n        disabled={!board || downloading}\r\n        title={DOWNLOAD_TOOLTIP}\r\n      >\r\n        <Icon\r\n          name={downloading ? 'spinner' : 'file-download'}\r\n          faProps={{pulse: downloading}}\r\n        />\r\n      </Button>\r\n      <OpenFileDrawer\r\n        open={open}\r\n        handleFiles={handleFiles}\r\n        handleUrl={handleUrl}\r\n        close={toggleUploadOpen}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {\r\n  REPO_URL,\r\n  AUTHOR_NAME,\r\n  AUTHOR_URL,\r\n  CONTRIBUTORS_URL,\r\n  PRIVACY_URL,\r\n} from '../pkg'\r\n\r\nconst STYLE = 'fixed right-1 bottom-1 w-third tr'\r\nconst COPY_STYLE = 'mv0 lh-copy f7 white'\r\nconst LINK_STYLE = 'link dim fw3 lightest-blue'\r\n\r\nexport default function Footer(): JSX.Element {\r\n  return (\r\n    <footer className={STYLE}>\r\n      <p className={COPY_STYLE}>\r\n        {'© 2015 - 2019 by '}\r\n        <a href={AUTHOR_URL} className={LINK_STYLE}>\r\n          {AUTHOR_NAME.toLowerCase()}\r\n        </a>{' '}\r\n        {'and '}\r\n        <a href={CONTRIBUTORS_URL} className={LINK_STYLE}>\r\n          contributors\r\n        </a>\r\n      </p>\r\n      <p className={COPY_STYLE}>\r\n        <a href={PRIVACY_URL} className={LINK_STYLE}>\r\n          privacy policy\r\n        </a>\r\n        {' | '}\r\n        <a href={REPO_URL} className={LINK_STYLE}>\r\n          view source\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useAppState} from '../state'\r\nimport {PageTitle, Slide} from '../ui'\r\nimport {FileEvent} from '../types'\r\nimport AppSettings from '../AppSettings'\r\nimport BoardSettings from '../BoardSettings'\r\nimport FileControls from './FileControls'\r\n\r\nimport Footer from './Footer'\r\n\r\ntype Props = {\r\n  handleFiles: (event: FileEvent) => void\r\n  handleUrl: (url: string) => void\r\n}\r\n\r\nconst STYLE = 'flex items-start justify-between relative w-100 h3'\r\nconst TITLE_STYLE = 'w-third flex-none'\r\nconst BUTTON_WRAPPER_STYLE = 'flex-none flex items-start justify-end w-third'\r\nconst BUTTON_STYLE = 'ml1 pa1 f3'\r\n\r\nexport default function Nav(props: Props): JSX.Element {\r\n  const {board, loading, updating} = useAppState()\r\n  const {handleFiles, handleUrl} = props\r\n  const show = !loading && board !== null\r\n\r\n  return (\r\n    <nav className={STYLE}>\r\n      <PageTitle subtitle=\"view\" className={TITLE_STYLE} />\r\n      {board && (\r\n        <Slide in={show} from=\"top\">\r\n          <BoardSettings board={board} updating={updating} />\r\n        </Slide>\r\n      )}\r\n      <div className={BUTTON_WRAPPER_STYLE}>\r\n        <FileControls\r\n          buttonClassName={BUTTON_STYLE}\r\n          handleFiles={handleFiles}\r\n          handleUrl={handleUrl}\r\n        />\r\n        <AppSettings buttonClassName={BUTTON_STYLE} />\r\n      </div>\r\n      <Footer />\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {HiddenInput, Icon} from '../ui'\r\nimport {FileEvent} from '../types'\r\n\r\nexport type FileInputProps = {\r\n  children?: React.ReactNode\r\n  handleFiles: (event: FileEvent) => unknown\r\n}\r\n\r\nexport default function FileInput(props: FileInputProps): JSX.Element {\r\n  const {children, handleFiles} = props\r\n\r\n  return (\r\n    <label className=\"db pv4 pointer\">\r\n      <HiddenInput type=\"file\" onChange={handleFiles} multiple />\r\n      <Icon name=\"plus\" className=\"dib f1 brand\" />\r\n      {children}\r\n    </label>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Formik, Form, Field} from 'formik'\r\n\r\nimport {useLocation} from '../hooks'\r\nimport {Button, Icon} from '../ui'\r\nimport {select} from '../events'\r\n\r\nconst LABEL_STYLE = 'db pointer mb2'\r\nconst WRAPPER_STYLE = 'flex items-bottom h2'\r\nconst INPUT_STYLE =\r\n  'w-100 mh2 bb bt-0 br-0 bl-0 b--near-black code f6 tc bg-transparent'\r\nconst BUTTON_STYLE = 'flex-none nr4 brand'\r\n\r\nconst INPUT_ID = 'load-files_url-input'\r\n\r\nconst defaultUrl = (loc: Location | null): string =>\r\n  loc ? `${loc.origin}${loc.pathname}arduino-uno.zip` : ''\r\n\r\nexport type UrlInputProps = {\r\n  children?: React.ReactNode\r\n  handleUrl: (url: string) => unknown\r\n}\r\n\r\nexport default function UrlInput(props: UrlInputProps): JSX.Element {\r\n  const {children, handleUrl} = props\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{url: defaultUrl(location)}}\r\n      onSubmit={values => handleUrl(values.url)}\r\n      enableReinitialize\r\n    >\r\n      {formProps => (\r\n        <Form>\r\n          <label htmlFor={INPUT_ID} className={LABEL_STYLE}>\r\n            {children}\r\n          </label>\r\n          <div className={WRAPPER_STYLE}>\r\n            <Field\r\n              id={INPUT_ID}\r\n              name=\"url\"\r\n              type=\"text\"\r\n              className={INPUT_STYLE}\r\n              onClick={select}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              className={BUTTON_STYLE}\r\n              disabled={!formProps.values.url}\r\n            >\r\n              <Icon name=\"check\" />\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useAppState} from '../state'\r\nimport {Icon, Fade} from '../ui'\r\nimport {FileEvent} from '../types'\r\nimport FileInput from './FileInput'\r\nimport UrlInput from './UrlInput'\r\n\r\nconst UPLOAD_MESSAGE = 'Upload your Gerber and drill files to render your board'\r\nconst UPLOAD_SUBMESSAGE = 'ZIP files work, too'\r\nconst URL_MESSAGE = 'or enter the URL of a ZIP archive'\r\n\r\nconst WRAPPER_STYLE = 'absolute absolute--center near-black tc'\r\nconst MESSAGE_STYLE = 'mt3 mb0 f4 lh-copy'\r\nconst SUBMESSAGE_STYLE = 'f5 fw3'\r\n\r\nexport type LoadFilesProps = {\r\n  handleFiles: (event: FileEvent) => void\r\n  handleUrl: (url: string) => void\r\n}\r\n\r\nexport default function LoadFiles(props: LoadFilesProps): JSX.Element {\r\n  const {mode, loading} = useAppState()\r\n\r\n  return (\r\n    <>\r\n      <Fade in={loading}>\r\n        <Icon\r\n          className={`${WRAPPER_STYLE} f1 brand`}\r\n          name=\"spinner\"\r\n          faProps={{pulse: true}}\r\n        />\r\n      </Fade>\r\n      <Fade in={!mode && !loading}>\r\n        <div className={WRAPPER_STYLE}>\r\n          <FileInput handleFiles={props.handleFiles}>\r\n            <p className={MESSAGE_STYLE}>\r\n              {UPLOAD_MESSAGE}\r\n              <br />\r\n              <span className={SUBMESSAGE_STYLE}>({UPLOAD_SUBMESSAGE})</span>\r\n            </p>\r\n          </FileInput>\r\n          <UrlInput handleUrl={props.handleUrl}>{URL_MESSAGE}</UrlInput>\r\n        </div>\r\n      </Fade>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useTimeout} from '../hooks'\r\nimport {Button, Icon} from '../ui'\r\n\r\nconst STYLE = 'dib center fixed top-1 left-0 right-0 tc'\r\nconst WRAPPER_STYLE =\r\n  'inline-flex items-center justify-center pl3 pv1 pr1 br2 bg-red white shadow'\r\nconst MESSAGE_STYLE = 'mv0 mr2'\r\n\r\nconst DISMISS_TIMEOUT = 4000\r\n\r\nexport type ToastProps = {\r\n  dismiss: () => unknown\r\n  children: React.ReactNode\r\n}\r\n\r\nexport default function Toast(props: ToastProps): JSX.Element {\r\n  const {dismiss, children} = props\r\n\r\n  useTimeout(dismiss, DISMISS_TIMEOUT)\r\n\r\n  return (\r\n    <div className={STYLE}>\r\n      <div className={WRAPPER_STYLE}>\r\n        <p className={MESSAGE_STYLE}>\r\n          {'Error: '}\r\n          {children}\r\n        </p>\r\n        <Button onClick={dismiss}>\r\n          <Icon name=\"times\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {useAppState, dismissError} from '../state'\r\nimport {usePrevious} from '../hooks'\r\nimport {Slide} from '../ui'\r\nimport Toast from './Toast'\r\n\r\nexport default function ErrorToast(): JSX.Element {\r\n  const {error, dispatch} = useAppState()\r\n  const prevError = usePrevious(error)\r\n  const prevErrorMessage = prevError ? prevError.message : null\r\n\r\n  return (\r\n    <Slide in={!!error} from=\"top\">\r\n      <Toast dismiss={() => dispatch(dismissError())}>\r\n        {error ? error.message : prevErrorMessage}\r\n      </Toast>\r\n    </Slide>\r\n  )\r\n}\r\n","// root component\r\nimport React from 'react'\r\nimport {hot} from 'react-hot-loader/root'\r\n\r\nimport {useAppState, createBoard, createBoardFromUrl} from './state'\r\nimport BoardDisplay from './BoardDisplay'\r\nimport FileList from './FileList'\r\nimport BoardList from './BoardList'\r\nimport Nav from './Nav'\r\nimport LoadFiles from './LoadFiles'\r\nimport ErrorToast from './ErrorToast'\r\nimport {preventDefault} from './events'\r\nimport {Main} from './ui'\r\nimport {FileEvent} from './types'\r\n\r\nfunction App(): JSX.Element {\r\n  const {dispatch} = useAppState()\r\n\r\n  const handleFiles = (event: FileEvent): void => {\r\n    const files =\r\n      'dataTransfer' in event\r\n        ? Array.from(event.dataTransfer.files)\r\n        : Array.from(event.target.files || [])\r\n\r\n    if (files.length > 0) dispatch(createBoard(files, 'dataTransfer' in event))\r\n    if ('value' in event.target) event.target.value = ''\r\n    preventDefault(event)\r\n  }\r\n\r\n  const handleUrl = (url: string): void => {\r\n    if (url) dispatch(createBoardFromUrl(url))\r\n  }\r\n\r\n  return (\r\n    <Main onDragOver={preventDefault} onDrop={handleFiles}>\r\n      <BoardDisplay />\r\n      <FileList />\r\n      <BoardList />\r\n      <Nav handleFiles={handleFiles} handleUrl={handleUrl} />\r\n      <LoadFiles handleFiles={handleFiles} handleUrl={handleUrl} />\r\n      <ErrorToast />\r\n    </Main>\r\n  )\r\n}\r\n\r\nexport default hot(App)\r\n"],"sourceRoot":""}